This is METAFONT, Version 2.71828182 (preloaded base=mf 2025.5.31)  1 AUG 2025 15:59
**\mode:=ljfour; mag:=720/600; nonstopmode; input ectt0
(/home/steve/.texlive2025/texmf-var/fonts/source/jknappen/ec/ectt0.mf
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exbase.mf)
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/ectt.mf
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exroman.mf
 Ok (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exaccess.mf
 Ok) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/expseudo.mf
 Ok) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exruwest.mf
 Ok
! Square root of -47.6981 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(1)> ...o(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.87 repeat_once
                ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
This error message was generated by an `errmessage'
command, so I can't give any explicit help.
Pretend that you're Miss Marple: Examine all clues,
and deduce the truth by inspired guesses.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ....serifs:0.75u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(%CAPSULE8071)> ...em,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.87 repeat_once
                ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8071)> ...;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8071)> ...;penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8071)> ...penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.87 repeat_once
                ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8071)> ...penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.87 repeat_once
                ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE8071)> ...end(2l,1l,1,1,1r,0)--cycle;
                                                  fi.penpos5(whatever,angle(...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE8071)> ...ap_band;penstroke.z5e--z6e;
                                                  if.serifs:numeric.inner_ju...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE8071)> ...jut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE8071)> ...inner_jut,d,1/3,outer_jut);
                                                  fi.hpos_corr=if.not.serifs...
l.87 repeat_once
                ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8071)> ...5u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE8071)> ...5u.else:0.25u.fi;put_gravis
                                                  ; ENDFOR
l.87 repeat_once
                ;
(That was another `errmessage'.)

[192]
! Square root of -47.6981 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(1)> ...o(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.124 repeat_once
                 ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...-apex_corr);penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ft_stem,0);penpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...nospace:hpos_corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(%CAPSULE11292)> ...m,y2-y1,x4r-x1l-apex_corr)
                                                  ;penpos1(alpha*left_stem,0...
l.124 repeat_once
                 ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11292)> ...penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11292)> ...penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11292)> ...enpos3(alpha*right_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE11292)> ...enpos4(alpha*right_stem,0)
                                                  ;z0=whatever[z1r,z2r]=what...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE11292)> ...nd(2l,1l,1,1,1r,0)--cycle;
                                                  fi.penpos5(whatever,angle(...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE11292)> ...p_band;penstroke.z5e--z6e;
                                                  if.serifs:numeric.inner_ju...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE11292)> ...ut,b,0.6,inner_jut)(dark);
                                                  dish_serif(4',3,c,1/2,inne...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE11292)> ...nner_jut,d,1/3,outer_jut);
                                                  fi.if.not.monospace:hpos_c...
l.124 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11292)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11292)> ..._corr=-0.75u;fi.put_accent
                                                  ;penlabels(0,1,2,3,4,5,6);...
l.124 repeat_once
                 ;
(That was another `errmessage'.)

[193]
! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.135 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.136 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.137 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.144   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.148 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.153 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.154 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[194]
! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.168 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.169 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.170 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.177   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.181 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.186 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.187 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -60.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+8
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-77.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-85
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+0.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.189 uppercase_tilde(0,0,12,13,14,15,16)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[195]
! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.201 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.202 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.203 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.210   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.214 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.219 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.220 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[196]
! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.233 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.234 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.235 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.242   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                           fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.246 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.251 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.252 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.254 uppercase_circle(x2,y2,12,13,14,15)
                                         ;
(That was another `errmessage'.)

[197]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.269 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.280 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

>> 17
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -288 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -1.4367
! Division by zero.
<to be read again> 
                   endgroup
l.284 ...iag_ratio(1,.5left_stem,y12-y11,x12-x11l)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 penpos11(alpha*left_stem,0)
                                 ; penpos12(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.285 ...left_stem,0); penpos12(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+12.38477,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 12.38477
>> (-from_x+12.38477,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+12.38477,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-36.46326,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -36.46326
>> (-to_x-36.46326,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-36.46326,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.286 fill diag_end(12l,11l,1,1,11r,12r)
                                        
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-35.02664,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -35.02664
>> (-from_x-35.02664,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x-35.02664,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x+13.82138,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 13.82138
>> (-to_x+13.82138,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x+13.82138,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.287  --diag_end(11r,12r,1,1,12l,11l)
                                      --cycle; % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 WNW NNW NNE NNW WNW 2 WSW SSW SSE ESE 4 ENE NNE NNW NNE ENE 6 ESE SSE SSW W
SW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.287  --diag_end(11r,12r,1,1,12l,11l)--cycle;
                                               % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 41).
<to be read again> 
                   ;
l.288 y10=h-slab; z10=whatever[z11,z12];
                                        
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x10
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.289 fill z10--
                (x1,y10)--(x1,h)--z12--cycle;  % link
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by -20.5).
<to be read again> 
                   ;
l.292 if hefty: y14r=.4h;
                          else: y14=y0; fi
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x13r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(l)> path_(SUFFIX0):=z13(SUFFIX0)--
                                       z14(SUFFIX0); ENDFOR
penstroke->...ffixes.e=l,r:path_.e:=(TEXT0);endfor
                                                  .if.cycle.path_.l:cyclestr...
<to be read again> 
                   ;
l.293 penstroke z13e--z14e;
                            % bar line
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x13r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(r)> path_(SUFFIX0):=z13(SUFFIX0)--
                                       z14(SUFFIX0); ENDFOR
penstroke->...ffixes.e=l,r:path_.e:=(TEXT0);endfor
                                                  .if.cycle.path_.l:cyclestr...
<to be read again> 
                   ;
l.293 penstroke z13e--z14e;
                            % bar line
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
l.295  prime_points_inside(11,12)
                                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x11'r+86.94894
! Unknown relation will be considered false.
<to be read again> 
                   :
l.296 ... x11'r+cap_jut+.5u+1<=lft x2l-.75cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11864
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x11'l-0.5x11'r-10.60263,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.i2,10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x11'l-0.5x11'r-10.60263,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x11'l,17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10563
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.i2-10.60312
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10950
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.i2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r+10.60263
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.i2-0.25x11'r-8.99905
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.i2+x11'l-14.79099
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x11'l-14.79099
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x11'l-14.79099
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12650
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.57143x11'r-31.19644
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x11'l-0.5x11'r-10.60263,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.j2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x11'l-0.5x11'r-10.60263,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x11'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11542
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.j2-10.60214
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12203
>> (-0.5x11'l-0.5x11'r-10.60263,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.j2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r+10.60263
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.j2-0.2x11'l-0.07143x11'r-13.60002
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.j2+0.42857x11'r-31.19644
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.57143x11'r-31.19644
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-31.19644
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r-31.19644
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x11'l+0.5x11'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.298 ...12,i,1/2,outer_jut,j,.6,inner_jut)(dark);
                                                    % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+23.39734
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.07143x11'r-18.10002
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+23.39734
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+23.39734
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+1.39783
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.42857x11'r+1.39783
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
nodish_serif->...FIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.300 ...(2,1,c,1/3,.75inner_jut,d,1/3,.5cap_jut);
                                                   fi  % lower middle serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[198] [199]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...t(0,0.5ic#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE8591)> ...4,e,beak_darkness,beak_jut)
                                                  ;pos5(cap_bar,-90);pos6(ha...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE8591)> ....arm(5,6,f,beak_darkness,0)
                                                  ;arm(0,7,g,beak_darkness,0...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE8591)> ...;arm(0,7,g,beak_darkness,0)
                                                  ;pos8(slab.if.not.serifs:+...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE8591)> ...,beak_darkness,1.5beak_jut)
                                                  ;if.serifs:nodish_serif(1,...
l.365 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8591)> ...;hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE8591)> ...;hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.365 repeat_once
                 ;
(That was another `errmessage'.)

[200]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ap_jut,d,1/3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9844)> ...4,e,beak_darkness,beak_jut)
                                                  ;pos5(cap_bar,-90);pos6(ha...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9844)> ....arm(5,6,f,beak_darkness,0)
                                                  ;arm(0,7,g,beak_darkness,0...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9844)> ...;arm(0,7,g,beak_darkness,0)
                                                  ;pos8(slab.if.not.serifs:+...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9844)> ...,beak_darkness,1.5beak_jut)
                                                  ;if.serifs:nodish_serif(1,...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9844)> ...3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9844)> ...3,0.5cap_jut);fi.put_accent
                                                  ; ENDFOR
l.393 repeat_once
                 ;
(That was another `errmessage'.)

[201]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.408 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.416 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.416 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.419 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[202]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.438 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.446 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.446 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.449 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[203]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...it(0,0.5ic#);hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11660)> ...;hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11660)> ...;hpos_corr=0.5u;put_gravis
                                                  ; ENDFOR
l.482 repeat_once
                 ;
(That was another `errmessage'.)

[204]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ce:hpos_corr=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12498)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12498)> ...=-0.5cap_jut;fi.put_accent
                                                  ; ENDFOR
l.511 repeat_once
                 ;
(That was another `errmessage'.)

[205] [206] [207] [208]
! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-116.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-116.00024,17)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.614   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+39.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+39.00024,17)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.616   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.616   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -60.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+8
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-77.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-85
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+0.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.627 uppercase_tilde(0,0,8,9,10,11,12)
                                       ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[209]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,ic#-0.5u#);hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9608)> ...;hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9608)> ...;hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.649 repeat_once
                 ;
(That was another `errmessage'.)

[210]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...s(1,2,3,4);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11203)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11203)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.669 repeat_once
                 ;
(That was another `errmessage'.)

[211] [212]
! Inconsistent equation (off by -60.00146).
<to be read again> 
                   ;
uppercase_tilde->...)]l);delta=whatever*dir.theta;
                                                  filldraw.z[(EXPR4)]l..cont...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+8
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-77.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-85
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
uppercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+0.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
uppercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.709 uppercase_tilde(0,0,7,8,9,10,11)
                                      ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[213] [214]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.744 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.752 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.752 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.755 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[215] [216]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...#-0.5u#,0));hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10881)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10881)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.812 repeat_once
                 ;
(That was another `errmessage'.)

[217]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...jut,d,1/2,cap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9650)> ...ap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9650)> ...ap_jut)(dark);fi.put_accent
                                                  ; ENDFOR
l.834 repeat_once
                 ;
(That was another `errmessage'.)

[218] [219] [220]
>> 273.11194
! Division by zero.
<to be read again> 
                   ;
<for(1)> ...ght;dy=y1-y2;alpha=((x2l-x1l)++dy)/dy;
                                                  penpos1(alpha*left_stem,0)...
l.916 repeat_once
                 ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Arithmetic overflow.
<for(1)> ...-x1l)++dy)/dy;penpos1(alpha*left_stem,
                                                  0);penpos2(alpha*left_stem...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (-32707.88808).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...1l)++dy)/dy;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-16323.88808).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...1l)++dy)/dy;penpos1(alpha*left_stem,0)
                                                  ;penpos2(alpha*left_stem,0...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
<for(1)> ...*left_stem,0);penpos2(alpha*left_stem,
                                                  0);penpos3(alpha*right_ste...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (32554.99998).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (16171).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...eft_stem,0);penpos2(alpha*left_stem,0)
                                                  ;penpos3(alpha*right_stem,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
<for(1)> ...left_stem,0);penpos3(alpha*right_stem,
                                                  0);penpos4(alpha*right_ste...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<for(1)> ...ight_stem,0);penpos4(alpha*right_stem,
                                                  0);penpos5(left_stem,0);pe...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (32431.88808).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (16047.88808).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...ht_stem,0);penpos4(alpha*right_stem,0)
                                                  ;penpos5(left_stem,0);penp...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-16446).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...pha*right_stem,0);penpos5(left_stem,0)
                                                  ;penpos6(left_stem,0);x5=x...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (-32767.99998).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...pha*right_stem,0);penpos5(left_stem,0)
                                                  ;penpos6(left_stem,0);x5=x...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Arithmetic overflow.
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...pha*right_stem,0);penpos5(left_stem,0)
                                                  ;penpos6(left_stem,0);x5=x...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
<for(1)> ...tem,0);x5=x6;y6=0;z0=whatever[z1r,z2r]
                                                  =whatever[z3l,z4l];if.y0>y...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
<for(1)> ...z0=whatever[z1r,z2r]=whatever[z3l,z4l]
                                                  ;if.y0>y2+cap_notch_cut:y0...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(1)> ...{down}z0+0.5left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9284
>> (-x0+32431.88808,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (32431.88808).
<recently read> ;
                 
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Arithmetic overflow.
diag_end->...z(SUFFIX7)];if.x(SUFFIX6)>x(SUFFIX3):
                                                  x_=x(SUFFIX3)+(EXPR4)*leng...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Value is too large (32370.88808).
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> (-to_x-336.11194,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -336.11194
>> (-to_x-336.11194,61)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-336.11194,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-32370.88808
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+32431.88808
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...z(SUFFIX2)}...{z(SUFFIX6)-z(SUFFIX3)}
                                                  (x_,y(SUFFIX3))..(xx_,y(SU...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...x_,y(SUFFIX3)){z(SUFFIX6)-z(SUFFIX3)}
                                                  ...{z(SUFFIX7)-z(SUFFIX6)}...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...4r,3r)--z5r--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...4r,3r)--z5r--diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12528
>> (x0+32707.88808,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Arithmetic overflow.
diag_end->...z(SUFFIX7)];if.x(SUFFIX6)>x(SUFFIX3):
                                                  x_=x(SUFFIX3)+(EXPR4)*leng...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> (-from_x+60.11194,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 60.11194
>> (-from_x+60.11194,61)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+60.11194,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0-32707.88808,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -32707.88808
>> (-x0-32707.88808,61)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0-32707.88808,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...z(SUFFIX2)}...{z(SUFFIX6)-z(SUFFIX3)}
                                                  (x_,y(SUFFIX3))..(xx_,y(SU...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> }
                 
diag_end->...x_,y(SUFFIX3)){z(SUFFIX6)-z(SUFFIX3)}
                                                  ...{z(SUFFIX7)-z(SUFFIX6)}...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> x0+32707.88808
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...,6l,5l)--z5l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Arithmetic overflow.
<recently read> )
                 
prime_points_inside->...e(z(SUFFIX0)r-z(SUFFIX0)l)
                                                  ;penpos(SUFFIX0)'(whatever...
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
prime_points_inside->...r[z(SUFFIX0)l,z(SUFFIX0)r]
                                                  ;theta_:=angle(z(SUFFIX1)-...
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Inconsistent equation (off by -122).
<to be read again> 
                   ;
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Arithmetic overflow.
<recently read> )
                 
prime_points_inside->...e(z(SUFFIX0)r-z(SUFFIX0)l)
                                                  ;penpos(SUFFIX0)'(whatever...
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
<recently read> ]
                 
prime_points_inside->...r[z(SUFFIX0)l,z(SUFFIX0)r]
                                                  ;theta_:=angle(z(SUFFIX1)-...
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Inconsistent equation (off by -122).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
<for(1)> ...s_inside(4,3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 122).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(1)> ...s_inside(4,3);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+275.51413
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(1)> ...x1'r+cap_jut+0.5u+1<=lft.x4'l-cap_jut:
                                                  inner_jut=cap_jut;else:rt....
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12501
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (16171).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,35)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,61)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9345
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+16170.99951
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12657
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-16171
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2-0.16667x1'l-0.33334x1'r+10770.55348
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10455
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (16171).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> 0.5x4'l-0.5x1'r-56.19237
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r+16171,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE8515
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+16171.00049
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11602
>> (-0.5x1'l-0.5x1'r+16171,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-16171
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l-0.25x1'l-0.125x1'r+8071.4519
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9116
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (-16446).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> -0.5x4'l+0.5x1'r+56.19237
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9321
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-16445.99951
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9822
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+16446
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2-0.35x4'l+0.1x4'r+0.15001x1'r-6561.44174
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+56.19237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11524
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (-16446).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-16446,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11503
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-16445.99951
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE1619
>> (-0.5x4'l-0.5x4'r-16446,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+16446
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2-0.25x4'l-8207.70662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+61.17352
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...3,cap_jut,f,1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

>> 75.77045
! Division by zero.
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...;alpha=((x2l-x1l)++dy)/dy;
                                                  penpos1(alpha*left_stem,0)...
l.916 repeat_once
                 ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(%CAPSULE10836)> ...left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12738
>> (-x0-3276.12921,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-93.77045,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -93.77045
>> (-to_x-93.77045,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-93.77045,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+3259.12921
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-3276.12921
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE10836)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z5r--diag_end(5r,6r,1,1,...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE10836)> ...-diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE10836)> ...-diag_end(5r,6r,1,1,6l,5l)
                                                  --z5l--diag_end(2l,1l,1,1,...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12519
>> (x0-3199.12921,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+16.77045,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 16.77045
>> (-from_x+16.77045,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+16.77045,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+3199.12921,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 3199.12921
>> (-x0+3199.12921,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+3199.12921,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-3199.12921
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE10836)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.if.serifs:numer...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...b;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE10836)> ...);prime_points_inside(4,3)
                                                  ;prime_points_inside(6,5);...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
<for(%CAPSULE10836)> ...);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE10836)> ...);prime_points_inside(6,5)
                                                  ;if.rt.x1'r+cap_jut+0.5u+1...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+77.54945
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(%CAPSULE10836)> ...+0.5u+1<=lft.x4'l-cap_jut:
                                                  inner_jut=cap_jut;else:rt....
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12696
>> (-0.5x1'l-0.5x1'r+1532.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10001
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+1532.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10840
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1532.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-1024.30511
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9207
>> (-0.5x1'l-0.5x1'r+1532.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10024
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+1532.17987
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10838
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1532.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-770.0945
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9689
>> (-0.5x4'l-0.5x4'r-1608.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9593
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-1608.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9042
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1608.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+648.06775
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12607
>> (-0.5x4'l-0.5x4'r-1608.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9814
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-1608.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11828
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1608.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.25x4'l+0.5x4'r+808.35634
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE10836)> ...ut,d,1/2,outer_jut)(dark);
                                                  dish_serif(6',5,e,1/3,cap_...
l.916 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10836)> ...1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10836)> ...1/3,cap_jut);fi.put_accent
                                                  ; ENDFOR
l.916 repeat_once
                 ;
(That was another `errmessage'.)

[221] [222]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.970 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[223]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrlwest.mf
 Ok
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...+vround1.5oo;if.serifs:pos1(flare,180)
                                                  ;pos2(hair,180);pos3(vair,...
l.102 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...e.z5'e--z10e;fi.hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.102 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...e.z5'e--z10e;fi.hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.102 repeat_once
                 ;
(That was another `errmessage'.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9355)> ...o;if.serifs:pos1(flare,180)
                                                  ;pos2(hair,180);pos3(vair,...
l.102 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9355)> ...e;fi.hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.102 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9355)> ...e;fi.hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.102 repeat_once
                 ;
(That was another `errmessage'.)

[224]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...+vround1.5oo;if.serifs:pos1(flare,180)
                                                  ;pos2(hair,180);pos3(vair,...
l.150 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....z5'e--z10e;fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.150 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ....z5'e--z10e;fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.150 repeat_once
                 ;
(That was another `errmessage'.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13991)> ...;if.serifs:pos1(flare,180)
                                                  ;pos2(hair,180);pos3(vair,...
l.150 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13991)> ...fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.150 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13991)> ...fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.150 repeat_once
                 ;
(That was another `errmessage'.)

[225]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.159 if serifs: pos1(flare,180)
                                ; pos2(hair,180);
(That was another `errmessage'.)

[226]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.208 if serifs: pos1(flare,180)
                                ; pos2(hair,180);
(That was another `errmessage'.)

! Inconsistent equation (off by -20.00049).
<to be read again> 
                   ;
lowercase_tilde->...]l-0.25vair)-top.y[(EXPR4)]r);
                                                  filldraw.z[(EXPR4)]l..cont...
l.247 lowercase_tilde(0,0,14,15,16,17,18)
                                         ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+3
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.247 lowercase_tilde(0,0,14,15,16,17,18)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-74.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.247 lowercase_tilde(0,0,14,15,16,17,18)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-82
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.247 lowercase_tilde(0,0,14,15,16,17,18)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-4.40048
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.247 lowercase_tilde(0,0,14,15,16,17,18)
                                         ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[227]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.258 if serifs: pos1(flare,180)
                                ; pos2(hair,180);
(That was another `errmessage'.)

[228]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.306 if serifs: pos1(flare,180)
                                ; pos2(hair,180);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

lowercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.345 ...(x3,(1/3[x_height,h]+apex_o),14,15,16,17)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

lowercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.345 ...(x3,(1/3[x_height,h]+apex_o),14,15,16,17)
                                                  ;
(That was another `errmessage'.)

[229]
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.372   ...{x15-x14,5(y15-y14)}z15e;
                                     % left bowl, arc, and terminal of e
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.385 if serifs: pos1(flare,180)
                                ; pos2(mfudged.hair,180);
(That was another `errmessage'.)

[230]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.419 if serifs: pos1(hair,0); pos0(flare,0)
                                            ;
(That was another `errmessage'.)

> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.427   ..tension .9 and 1..{x5-x4,5(y5-y4)}z5e;
                                                  % arc and lower terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[231]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(l)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
<for(1)> ...0$))intersectionpoint.testpath);endfor
                                                  .fill.stroke.z0e--z1'e;hpo...
l.476 repeat_once
                 ;
(That was another `errmessage'.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
<for(1)> ...0$))intersectionpoint.testpath);endfor
                                                  .fill.stroke.z0e--z1'e;hpo...
l.476 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ke.z0e--z1'e;hpos_corr=1.5u;put_gravis
                                                  ; ENDFOR
l.476 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ke.z0e--z1'e;hpos_corr=1.5u;put_gravis
                                                  ; ENDFOR
l.476 repeat_once
                 ;
(That was another `errmessage'.)

> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12989)> ...,4)...{x5-x4,5(y5-y4)}z5e;
                                                  else:pos4(vair,270);filldr...
l.476 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
<for(%CAPSULE12989)> ...tionpoint.testpath);endfor
                                                  .fill.stroke.z0e--z1'e;hpo...
l.476 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12989)> ...;hpos_corr=1.5u;put_gravis
                                                  ; ENDFOR
l.476 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12989)> ...;hpos_corr=1.5u;put_gravis
                                                  ; ENDFOR
l.476 repeat_once
                 ;
(That was another `errmessage'.)

[232]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(l)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
<for(1)> ...0$))intersectionpoint.testpath);endfor
                                                  .fill.stroke.z0e--z1'e;hpo...
l.513 repeat_once
                 ;
(That was another `errmessage'.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
<for(1)> ...0$))intersectionpoint.testpath);endfor
                                                  .fill.stroke.z0e--z1'e;hpo...
l.513 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...roke.z0e--z1'e;hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.513 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...roke.z0e--z1'e;hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.513 repeat_once
                 ;
(That was another `errmessage'.)

> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE9327)> ...3,4)...{x5-x4,5(y5-y4)}z5e;
                                                  else:pos4(vair,270);filldr...
l.513 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
<for(%CAPSULE9327)> ...ctionpoint.testpath);endfor
                                                  .fill.stroke.z0e--z1'e;hpo...
l.513 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9327)> ...1'e;hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.513 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9327)> ...1'e;hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.513 repeat_once
                 ;
(That was another `errmessage'.)

[233]
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.536   ...{x5-x4,5(y5-y4)}z5e;
                                % left bowl, arc, and terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
l.546 ...y0$)) intersectionpoint testpath); endfor
                                                  
(That was another `errmessage'.)

[234]
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.573   ...{x5-x4,5(y5-y4)}z5e;
                                % left bowl, arc, and terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
l.583 ...y0$)) intersectionpoint testpath); endfor
                                                  
(That was another `errmessage'.)

[235]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,b,1/3,jut,c,1/3,0.9jut);fi.put_gravis
                                                  ; ENDFOR
l.604 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,b,1/3,jut,c,1/3,0.9jut);fi.put_gravis
                                                  ; ENDFOR
l.604 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12805)> ...,1/3,0.9jut);fi.put_gravis
                                                  ; ENDFOR
l.604 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12805)> ...,1/3,0.9jut);fi.put_gravis
                                                  ; ENDFOR
l.604 repeat_once
                 ;
(That was another `errmessage'.)

[236]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...onospace:hpos_corr=-0.5u;fi.put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...onospace:hpos_corr=-0.5u;fi.put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12805)> ...s_corr=-0.5u;fi.put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12805)> ...s_corr=-0.5u;fi.put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
(That was another `errmessage'.)

[237] [238] [239]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   ;
l.688      intersectionpoint p ;
                                
(That was another `errmessage'.)

[240]
! Inconsistent equation (off by -20.00049).
<to be read again> 
                   ;
lowercase_tilde->...]l-0.25vair)-top.y[(EXPR4)]r);
                                                  filldraw.z[(EXPR4)]l..cont...
l.712 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+4
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.712 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-73.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.712 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-81
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.712 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-3.40048
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.712 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[241]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...rc.e(4,1)&cycle;hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.728 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...rc.e(4,1)&cycle;hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.728 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10610)> ...cle;hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.728 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10610)> ...cle;hpos_corr=u;put_gravis
                                                  ; ENDFOR
l.728 repeat_once
                 ;
(That was another `errmessage'.)

[242]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...);if.serifs:hpos_corr=-u;fi.put_accent
                                                  ; ENDFOR
l.745 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...);if.serifs:hpos_corr=-u;fi.put_accent
                                                  ; ENDFOR
l.745 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10952)> ...hpos_corr=-u;fi.put_accent
                                                  ; ENDFOR
l.745 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10952)> ...hpos_corr=-u;fi.put_accent
                                                  ; ENDFOR
l.745 repeat_once
                 ;
(That was another `errmessage'.)

[243] [244]
! Inconsistent equation (off by -20.00049).
<to be read again> 
                   ;
lowercase_tilde->...]l-0.25vair)-top.y[(EXPR4)]r);
                                                  filldraw.z[(EXPR4)]l..cont...
l.776 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+8
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.776 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-69.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.776 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-77
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.776 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta+0.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.776 lowercase_tilde(0,0,5,6,7,8,9)
                                    ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[245] [246]
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.815   ...{x15-x14,5(y15-y14)}z15e;
                                     % left bowl, arc, and terminal of e
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[247] [248]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...f_drop));fi.hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.876 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...f_drop));fi.hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.876 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10309)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.876 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10309)> ...hpos_corr=0.75u;put_gravis
                                                  ; ENDFOR
l.876 repeat_once
                 ;
(That was another `errmessage'.)

[249]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...erif_drop));fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.905 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...erif_drop));fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.905 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11792)> ...fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.905 repeat_once
                 ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11792)> ...fi.hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.905 repeat_once
                 ;
(That was another `errmessage'.)

[250] [251] [252]
>> 122
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
<for(1)> ...io(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Value is too large (-14880).
diag_ratio->...)/(EXPR4);a_=(EXPR2)*(EXPR2)-b_*b_;
                                                  ((EXPR2)*((EXPR5)++(EXPR4)...
<for(1)> ...io(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Square root of -14880 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(1)> ...io(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! Arithmetic overflow.
diag_ratio->...XPR5)++(EXPR4)*sqrt.a_)-b_*(EXPR5))
                                                  /a_/(EXPR4)endgroup
<for(1)> ...io(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

! Arithmetic overflow.
diag_ratio->...XPR5)++(EXPR4)*sqrt.a_)-b_*(EXPR5))
                                                  /a_/(EXPR4)endgroup
<for(1)> ...io(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
Uh, oh. A little while ago one of the quantities that I was
computing got too large, so I'm afraid your answers will be
somewhat askew. You'll probably have to adopt different
tactics next time. But I shall try to carry on anyway.

>> -2.20215
! Division by zero.
<to be read again> 
                   endgroup
<for(1)> ...io(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ..._stem,0)];fi.penpos3(alpha*bot_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ot_stem,0);penpos4(alpha*right_stem,0)
                                                  ;alpha3=(y1++(x2l-x1l))/y1...
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

>> 77.76102
! Division by zero.
<to be read again> 
                   ;
<for(1)> ...ght_stem,0);alpha3=(y1++(x2l-x1l))/y1;
                                                  penpos1(alpha3*left_stem,0...
l.1012 repeat_once
                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Value is too large (9569.08978).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...l-x1l))/y1;penpos1(alpha3*left_stem,0)
                                                  ;penpos2(alpha3*left_stem,...
l.1012 repeat_once
                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4825.66776).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...l-x1l))/y1;penpos1(alpha3*left_stem,0)
                                                  ;penpos2(alpha3*left_stem,...
l.1012 repeat_once
                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (9491.32877).
penpos->...y(SUFFIX2)l)=((EXPR3),0)rotated(EXPR4);
                                                  x(SUFFIX2)=0.5(x(SUFFIX2)l...
<for(1)> ...ft_stem,0);penpos2(alpha3*left_stem,0)
                                                  ;z0=whatever[z1r,z2r]=z4l+...
l.1012 repeat_once
                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

! Value is too large (4747.90674).
penpos->...(SUFFIX2)=0.5(x(SUFFIX2)l+x(SUFFIX2)r);
                                                  y(SUFFIX2)=0.5(y(SUFFIX2)l...
<for(1)> ...ft_stem,0);penpos2(alpha3*left_stem,0)
                                                  ;z0=whatever[z1r,z2r]=z4l+...
l.1012 repeat_once
                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(1)> ...{down}z0+0.5left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10654
>> (-x0-63.58362,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-332.24573,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -332.24573
>> (-to_x-332.24573,61)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-332.24573,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+124.58362
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-63.58362
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...else:fill.z0--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE9997
>> (x0-9569.08978,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+82.24573,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 82.24573
>> (-from_x+82.24573,61)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+82.24573,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+9569.08978,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 9569.08978
>> (-x0+9569.08978,61)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+9569.08978,61)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-9569.08978
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(1)> ...r)--z3r--z2l--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...0)--cycle;fi.penpos5(alpha*bot_stem,0)
                                                  ;z5r=whatever[z3r,z4r];y5-...
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

! Inconsistent equation (off by 74).
<to be read again> 
                   ;
<for(1)> ...5r=whatever[z3r,z4r];y5-0.5vair=-0.5d;
                                                  if.serifs:numeric.light_bu...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x5r+268.66211
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(l)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...35u;fill.stroke.z3e---z5e...{left}z6e;
                                                  bulb(6,7,8);numeric.inner_...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(r)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(1)> ...35u;fill.stroke.z3e---z5e...{left}z6e;
                                                  bulb(6,7,8);numeric.inner_...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 122).
<to be read again> 
                   ;
<for(1)> ...ckup.tiny.nib;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -122).
<to be read again> 
                   ;
<for(1)> ...s_inside(1,2);prime_points_inside(4,3)
                                                  ;if.rt.x1'r+jut+0.5u+1<=lf...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+312.0412
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(1)> ...);if.rt.x1'r+jut+0.5u+1<=lft.x4'l-jut:
                                                  inner_jut=jut;else:rt.x1'r...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13998
>> (-0.5x1'l-0.5x1'r+4747.90674,61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (4747.90674).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> (0.5x1'l+0.5x1'r-4747.90674,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-35)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-4747.90674,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-61)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13995
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+4747.90625
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13909
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-4747.90674
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-3177.93256
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-75.82462
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-75.82462
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-75.82462
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE13895
>> (-0.5x1'l-0.5x1'r+4747.90674,61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Value is too large (4747.90674).
<recently read> ;
                 
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just processed has given some variable
a value of 4096 or more. Continue and I'll try to cope
with that big value; but it might be dangerous.
(Set warningcheck:=0 to suppress this message.)

>> 0.5x4'l-0.5x1'r-54.92111
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-4747.90674,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-4747.90674,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12945
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+4747.90723
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9859
>> (0.5x1'l+0.5x1'r-4747.90674,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-4747.90674
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-2387.68364
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10988
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+54.92111
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-129.84634,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-129.84634,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11457
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-129.84586
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11701
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+129.84634
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2-0.35x4'l+0.1x4'r+0.15001x1'r-35.46124
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+54.92111
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12143
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -35).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-129.84634,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,35)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-129.84634,-61)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,61)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12096
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-129.84586
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13939
>> (-0.5x4'l-0.5x4'r-129.84634,-61)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -61).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+129.84634
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2-0.25x4'l-45.96701
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+75.82462
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+75.82462
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+75.82462
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(1)> ...,0.6,inner_jut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ke.term.e(6',7,left,1,4);fi.put_accent
                                                  ; ENDFOR
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ke.term.e(6',7,left,1,4);fi.put_accent
                                                  ; ENDFOR
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

>> 34
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
<for(%CAPSULE13417)> ...m,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1152 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
<for(%CAPSULE13417)> ...m,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -3.51715
! Division by zero.
<to be read again> 
                   endgroup
<for(%CAPSULE13417)> ...m,y1-y3,x4r-x1l-apex_corr)
                                                  ;alpha2=diag_ratio(1,bot_s...
l.1012 repeat_once
                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13417)> ....penpos3(alpha*bot_stem,0)
                                                  ;penpos4(alpha*right_stem,...
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13417)> ...enpos4(alpha*right_stem,0)
                                                  ;alpha3=(y1++(x2l-x1l))/y1...
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

>> 0.84187
! Division by zero.
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...alpha3=(y1++(x2l-x1l))/y1;
                                                  penpos1(alpha3*left_stem,0...
l.1012 repeat_once
                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
<for(%CAPSULE13417)> ...left--cycle;else:fill.z0--
                                                  diag_end(0,4l,1,1,4r,3r)--...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10351
>> (-x0+27.47104,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-92.11209,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -92.11209
>> (-to_x-92.11209,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-92.11209,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-10.47104
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+27.47104
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE13417)> ...--diag_end(0,4l,1,1,4r,3r)
                                                  --z3r--z2l--diag_end(2l,1l...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE11732
>> (x0-51.73578,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+23.11209,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 23.11209
>> (-from_x+23.11209,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+23.11209,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+51.73578,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 51.73578
>> (-x0+51.73578,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+51.73578,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-51.73578
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
<for(%CAPSULE13417)> ...--diag_end(2l,1l,1,1,1r,0)
                                                  --cycle;fi.penpos5(alpha*b...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13417)> ....penpos5(alpha*bot_stem,0)
                                                  ;z5r=whatever[z3r,z4r];y5-...
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

! Inconsistent equation (off by 20.5).
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...z3r,z4r];y5-0.5vair=-0.5d;
                                                  if.serifs:numeric.light_bu...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x5r+119.58313
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(l)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...oke.z3e---z5e...{left}z6e;
                                                  bulb(6,7,8);numeric.inner_...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(r)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...oke.z3e---z5e...{left}z6e;
                                                  bulb(6,7,8);numeric.inner_...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW NNW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
<for(%CAPSULE13417)> ...5e...{left}z6e;bulb(6,7,8)
                                                  ;numeric.inner_jut;pickup....
l.1012 repeat_once
                  ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE13417)> ...b;prime_points_inside(1,2)
                                                  ;prime_points_inside(4,3);...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
<for(%CAPSULE13417)> ...);prime_points_inside(4,3)
                                                  ;if.rt.x1'r+jut+0.5u+1<=lf...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+87.17612
! Unknown relation will be considered false.
<to be read again> 
                   :
<for(%CAPSULE13417)> ...+jut+0.5u+1<=lft.x4'l-jut:
                                                  inner_jut=jut;else:rt.x1'r...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10481
>> (-0.5x1'l-0.5x1'r+38.26581,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13953
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+38.26532
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9106
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-38.26581
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-28.99866
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12787
>> (-0.5x1'l-0.5x1'r+38.26581,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9476
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+38.2663
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11117
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-38.26581
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-23.05394
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...uter_jut,b,1/2,inner_jut);
                                                  dish_serif(4',3,c,0.6,inne...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11845
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13634
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-35.83711
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10700
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+35.8376
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2-0.35x4'l+0.1x4'r+0.15001x1'r-9.62952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12408
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10469
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-35.83711
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12045
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+35.8376
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2-0.25x4'l-12.68683
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
<for(%CAPSULE13417)> ...ut,d,1/2,outer_jut)(dark);
                                                  else:penpos6(bot_vair,-90)...
l.1012 repeat_once
                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13417)> ...,7,left,1,4);fi.put_accent
                                                  ; ENDFOR
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13417)> ...,7,left,1,4);fi.put_accent
                                                  ; ENDFOR
l.1012 repeat_once
                  ;
(That was another `errmessage'.)

[253]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.1064 ...intersectionpoint(z3l{up}...{right}z4l))
                                                  ;
(That was another `errmessage'.)

[254] [255])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrueast.mf
 Ok
! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.66 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.67 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.75   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                          fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.79 y5r-y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.84 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.85 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.87 uppercase_breve(x2,0,12,13,14)
                                   ;
(That was another `errmessage'.)

[128]
! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.100 ...atio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101  penpos1(alpha*left_stem,0)
                                 ; penpos2(alpha*left_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102  penpos3(alpha*right_stem,0)
                                  ; penpos4(alpha*right_stem,0);
(That was another `errmessage'.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.102 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
(That was another `errmessage'.)

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.109    --diag_end(2l,1l,1,1,1r,0)--cycle;
                                            fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.113 ...y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.118 ...,2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                   % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.119 ...if(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.128  put_ogonek(the_pen)
                          ;
(That was another `errmessage'.)

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-14.94467 (should be 24)
y_right=-0.00024 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.128  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[129]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...e;penlabels(1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12232)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12232)> ...1,1',2,3,4,5,6);put_accent
                                                  ; ENDFOR
l.153  repeat_once
                  ;
Maybe Jackowski knows how to change them...

[130] [131] [132]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.240 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.248 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.248 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.251 arm(8,9,hh,beak_darkness,1.5beak_jut)
                                           ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[133]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.269  arm(3,4,e,beak_darkness,beak_jut)
                                        ; % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277  arm(5,6,f,beak_darkness,0)
                                 ; arm(0,7,g,beak_darkness,0); % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.277 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ; % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.280  arm(8,9,h,beak_darkness,1.5beak_jut)
                                           ; % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-74.94467 (should be -36)
y_right=-0.00024 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.291  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[134]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_breve->...os[(EXPR5)](mid_thickness,-90)
                                                  ;bot.y[(EXPR5)]r=cap_heigh...
l.341 uppercase_breve(x2,0,10,11,12)
                                    ;
Maybe Jackowski knows how to change them...

[135]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...ound.max(2u,3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE11367)> ...1.2beak_darkness,beak_jut)
                                                  ;if.serifs:dish_serif(1,2,...
l.359 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11367)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11367)> ...3u-0.5cap_stem);put_accent
                                                  ; ENDFOR
l.359 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[136]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.371 arm(3,4,e,1.2beak_darkness,beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.375 dtl_hachek(x4-pdot_diam)(y1+.5pdot_diam)
                                              ;
Maybe Jackowski knows how to change them...

[137]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12805)> ...1.2beak_darkness,beak_jut)
                                                  ;if.serifs:dish_serif(1,2,...
l.393 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[138]
! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-417.00024,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-417.00024,61)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(1)> ...){down}...fi{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 61).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+141.00024,61)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+141.00024,61)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(1)> ...ch){up}...fi{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4',5,6,7);hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(%CAPSULE12441)> ...{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE12441)> ...{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-116.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(%CAPSULE12441)> ...{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-116.00024,17)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(%CAPSULE12441)> ...{z6-z5}diag_in(5l,6l,1,6r)
                                                  --z6r..if.y4'>lower_notch:...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
<for(%CAPSULE12441)> ...{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
<for(%CAPSULE12441)> ...{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+39.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
<for(%CAPSULE12441)> ...{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+39.00024,17)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
<for(%CAPSULE12441)> ...{z5-z6}diag_in(6r,5r,1,5l)
                                                  --cycle;else:penpos5(whate...
l.429 repeat_once
                 ;
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12441)> ...iag_in(6r,5r,1,5l)--cycle;
                                                  else:penpos5(whatever,0);p...
l.429 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12441)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12441)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.429 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[139]
! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-116.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-116.00024,17)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.451   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+39.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+39.00024,17)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.453   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.453   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[140]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.475  pos5(flare+(cap_stem-stem),-180)
                                       ;
Maybe Jackowski knows how to change them...

[141]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11900)> ...hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11900)> ...hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11900)> ...;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11900)> ...;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.517 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[142]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...--cycle;fi.hpos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11313)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11313)> ...pos_corr=-0.75u;put_accent
                                                  ; ENDFOR
l.551 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[143] [144]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...6,7,8,8',9,10);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12244)> ...1,10(y2-y1)}....{left}z2e;
                                                  filldraw.stroke.z7e{left}....
l.625 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12244)> ...0);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12244)> ...0);hpos_corr=-u;put_accent
                                                  ; ENDFOR
l.625 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[145]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.649 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[146]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.691 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[147]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.725 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.727 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[148]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.745 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.747 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[149]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...f.monospace:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...u;put_accent;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8469)> ...:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE8469)> ...:hpos_corr=-2.5u;put_accent
                                                  ;hpos_corr=2.5u;put_accent...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8469)> ...t;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE8469)> ...t;hpos_corr=2.5u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.777 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[150]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

uppercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.802 ...ght+if hefty: .5 fi accent_gap,8,9,10,11)
                                                  ;
Maybe Jackowski knows how to change them...

[151]
>> 75.77045
! Division by zero.
<to be read again> 
                   ;
l.816 dy=y1-y2; alpha=((x2l-x1l)++dy)/dy;
                                         
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.825 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8595
>> (-x0-3276.12921,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-93.77045,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -93.77045
>> (-to_x-93.77045,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-93.77045,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+3259.12921
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-3276.12921
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.825 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.826     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.826     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE11013
>> (x0-3199.12921,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+16.77045,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 16.77045
>> (-from_x+16.77045,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+16.77045,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+3199.12921,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 3199.12921
>> (-x0+3199.12921,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+3199.12921,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-3199.12921
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.827     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
l.829  prime_points_inside(1,2)
                               ; prime_points_inside(4,3); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.829 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ; prime_points_inside(6,5);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
l.829 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.829 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+77.54945
! Unknown relation will be considered false.
<to be read again> 
                   :
l.830  if rt x1'r+cap_jut+.5u+1<=lft x4'l-cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10864
>> (-0.5x1'l-0.5x1'r+1532.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9966
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+1532.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9135
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1532.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-1024.30511
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12924
>> (-0.5x1'l-0.5x1'r+1532.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12713
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+1532.17987
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11180
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1532.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-770.0945
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.832 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE13556
>> (-0.5x4'l-0.5x4'r-1608.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13553
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-1608.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13451
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1608.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+648.06775
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11678
>> (-0.5x4'l-0.5x4'r-1608.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10599
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-1608.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10150
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1608.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.25x4'l+0.5x4'r+808.35634
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.833 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[152]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13689)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13689)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13689)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13689)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE13689)> ...arkness**0.8,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.867 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE13689)> ...darkness**0.9,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.867 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13689)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13689)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.867 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[153]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.883 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.884 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.891 arm(5,6,a,beak_darkness**.8,-.4beak_jut)
                                              ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.894 arm(7,8,b,beak_darkness**.9,.6beak_jut)
                                             ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[154]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...2r-x3l);penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12520)> ...os1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12520)> ...os2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12520)> ...os3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12520)> ...os4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.927 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12520)> ...arkness**0.8,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.927 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE12520)> ...darkness**0.9,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.927 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[155]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.946  pos15(flare+(cap_stem-stem),-180)
                                        ;
Maybe Jackowski knows how to change them...

[156] [157])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrleast.mf
 Ok
> 0 ENE 1 NNE ENE ESE SSE ESE 2 ENE NNE 3 4 NNW 5 WNW 6 WSW SSW WSW WNW NNW 7 (
WNW) WSW 8 (SSW) SSE ESE ENE NNE ENE 9 ESE 10 SSE 11 SSW WSW 12 13 WNW NNW NNE 
ENE ESE SSE 0 (ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.75  & pulled_arc.e(5,6)...{up}z7e;
                                     % bowl
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.76 ...0))intersectionpoint(z3l{up}...{left}z4l))
                                                  ;
Maybe Jackowski knows how to change them...

[158]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.101 if serifs: pos1(flare,180)
                                ; pos2(hair,180);
Maybe Jackowski knows how to change them...

[160]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.149  if serifs: pos1(flare,180)
                                 ; pos2(hair,180);
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-144.94467 (should be -106)
y_right=-7.43166 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.196  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[161]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...h;if.serifs:pos1(hair,0);pos0(flare,0)
                                                  ;y1=min(bar_height+0.5flar...
l.227 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...1,2,3,4,5);hpos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.227 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...1,2,3,4,5);hpos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.227 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE12487)> ...pos1(hair,0);pos0(flare,0)
                                                  ;y1=min(bar_height+0.5flar...
l.227 repeat_once
                 ;
Maybe Jackowski knows how to change them...

> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
<for(%CAPSULE12487)> ...and1..{x5-x4,5(y5-y4)}z5e;
                                                  else:pos1(4/7[vair',flare]...
l.227 repeat_once
                 ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12487)> ...pos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.227 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12487)> ...pos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.227 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[162]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.237 if serifs: pos1(hair,0); pos0(flare,0)
                                            ;
Maybe Jackowski knows how to change them...

> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.245   ..tension .9 and 1..{x5-x4,5(y5-y4)}z5e;
                                                  % arc and lower terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[163]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.281 ...))intersectionpoint(z3l{up}...{left}z4l))
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.287 dtl_hachek(x0r+u+.5pdot_diam)(y1)
                                       ;
Maybe Jackowski knows how to change them...

[164]
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.310   ...{x5-x4,5(y5-y4)}z5e;
                                % left bowl, arc, and terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
l.320 ...y0$)) intersectionpoint testpath); endfor
                                                  
Maybe Jackowski knows how to change them...

[165]
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.347    ...{x5-x4,5(y5-y4)}z5e;
                                 % left bowl, arc, and terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
l.357 ...y0$)) intersectionpoint testpath); endfor
                                                  
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
right_dir->...(z_a..controls.z_b.and(EXPR2)..z_d))
                                                  )-y_right.endgroup
<forever> ...nz_-pz_)<=tolerance;if.right_dir(z_c)
                                                  <=0:nz_.else:pz_.fi:=z_c; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
down_dir->begingroup.zsolve.right_dir(z_c)
                                          ;lft(xpart(directionpoint.down.of(...
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
down_dir->...of(z_a..controls(EXPR2)and.z_c..z_d))
                                                  )-x_down.endgroup
<forever> ...(nz_-pz_)<=tolerance;if.down_dir(z_b)
                                                  <=0:nz_.else:pz_.fi:=z_b; ...

zsolve->...))<=0:nz_.else:pz_.fi:=(SUFFIX3);endfor
                                                  .endgroup
put_ogonek->...),(1,y_right));zsolve.down_dir(z_b)
                                                  ;x_down':=xpart(lft(direct...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );y_right':=ypart(bot(dire...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   )
put_ogonek->...of(z_a..controls.z_b.and.z_c..z_d))
                                                  );if.abs(x_down'-x_down,y_...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

ERROR: `ogonek' iteration hasn't converged! Final values:
x_down=-81.94467 (should be -43)
y_right=-0.00024 (should be 0)
! Probably, you have to change somehow the boundary values.
<to be read again> 
                   ;
put_ogonek->...hange somehow the boundary values";
                                                  fi.z[ii]l=z_a;z[ii]'l=lo.z...
l.373  put_ogonek(the_pen)
                          ;
Maybe Jackowski knows how to change them...

[166]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.399  pos6(hair,0); pos7(.5[hair,flare],0)
                                           ; x5=.75[x0,x6]; top y5r=x_height+o;
Maybe Jackowski knows how to change them...

> 0 SSE 1 (ESE) ENE NNE NNW WNW WSW SSW SSE ESE 2 (SSE) SSW 3 (WSW) WNW NNW NNE
 ENE ESE SSE SSW WSW 0 (SSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.401  filldraw stroke z0e..{right}z5e;
                                        bulb(5,6,7);  % ear
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[167]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...2,1,b,1/3,jut,c,1/3,jut);fi.put_accent
                                                  ; ENDFOR
l.476 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...2,1,b,1/3,jut,c,1/3,jut);fi.put_accent
                                                  ; ENDFOR
l.476 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE11439)> ...t,c,1/3,jut);fi.put_accent
                                                  ; ENDFOR
l.476 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE11439)> ...t,c,1/3,jut);fi.put_accent
                                                  ; ENDFOR
l.476 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[168]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.494 dtl_hachek(x1r+u+.5pdot_diam)(y1)
                                       ;
Maybe Jackowski knows how to change them...

[169] [170]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...1/3,jut);fi.hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.545 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...1/3,jut);fi.hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.545 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13393)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.545 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13393)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.545 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[171] [172]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.587 ...r,-90); pos8(hair,-180); pos9(flare,-180)
                                                  ;
Maybe Jackowski knows how to change them...

[173]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...;if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...;if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10451)> ...e:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10451)> ...e:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE10451)> ...nt;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE10451)> ...nt;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.624 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[174]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...ar_height,x_height]+oo;pos6(r_flare,0)
                                                  ;bulb(4,5,6);else:pos4(r_f...
l.652 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....25jut);fi.hpos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.652 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ....25jut);fi.hpos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.652 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE13174)> ...height]+oo;pos6(r_flare,0)
                                                  ;bulb(4,5,6);else:pos4(r_f...
l.652 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE13174)> ...pos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.652 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE13174)> ...pos_corr=-0.25u;put_accent
                                                  ; ENDFOR
l.652 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[175]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.667  pos6(r_flare,0)
                      ; bulb(4,5,6);  % bulb
Maybe Jackowski knows how to change them...

[176]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,8,8',9,10);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.722 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,8,8',9,10);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.722 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12587)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.722 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12587)> ...hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.722 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[177] [178] [179]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...

dtl_hachek->...t_diam,0.25accent_u,2/3comma_depth)
                                                  ;penlabels(51);
l.849 dtl_hachek(x8)(y1+.5pdot_diam)
                                    ;
Maybe Jackowski knows how to change them...

[180] [181]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ....if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ....if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9038)> ...ce:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9038)> ...ce:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9038)> ...ent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9038)> ...ent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.918 repeat_once
                 ;
Maybe Jackowski knows how to change them...

[182]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

lowercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.947 ...le(.5w,(1/3[x_height,h]+apex_o),7,8,9,10)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

lowercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.947 ...le(.5w,(1/3[x_height,h]+apex_o),7,8,9,10)
                                                  ;
Maybe Jackowski knows how to change them...

[183]
>> 34
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.963 ...ratio(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1152 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.963 ...ratio(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -3.51715
! Division by zero.
<to be read again> 
                   endgroup
l.963 ...ratio(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.967 penpos3(alpha*bot_stem,0)
                               ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.967 ...*bot_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

>> 0.84187
! Division by zero.
<to be read again> 
                   ;
l.968 alpha3=(y1++(x2l-x1l))/y1;
                                
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.975 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE13699
>> (-x0+27.47104,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-92.11209,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -92.11209
>> (-to_x-92.11209,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-92.11209,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-10.47104
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+27.47104
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.975 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE8517
>> (x0-51.73578,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+23.11209,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 23.11209
>> (-from_x+23.11209,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+23.11209,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+51.73578,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 51.73578
>> (-x0+51.73578,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+51.73578,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-51.73578
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.976     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.977 penpos5(alpha*bot_stem,0)
                               ; z5r=whatever[z3r,z4r]; y5-.5vair=-.5d;
Maybe Jackowski knows how to change them...

! Inconsistent equation (off by 20.5).
<to be read again> 
                   ;
l.977 ...); z5r=whatever[z3r,z4r]; y5-.5vair=-.5d;
                                                  
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x5r+119.58313
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(l)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.981  fill stroke z3e---z5e...{left}z6e;
                                          bulb(6,7,8);  % arc and bulb
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(r)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.981  fill stroke z3e---z5e...{left}z6e;
                                          bulb(6,7,8);  % arc and bulb
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW NNW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.981 ...stroke z3e---z5e...{left}z6e; bulb(6,7,8)
                                                  ;  % arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.983  prime_points_inside(1,2)
                               ; prime_points_inside(4,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.983 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+87.17612
! Unknown relation will be considered false.
<to be read again> 
                   :
l.984  if rt x1'r+jut+.5u+1<=lft x4'l-jut:
                                           inner_jut=jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10765
>> (-0.5x1'l-0.5x1'r+38.26581,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12167
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+38.26532
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12081
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-38.26581
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-28.99866
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9218
>> (-0.5x1'l-0.5x1'r+38.26581,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13706
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+38.2663
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13610
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-38.26581
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-23.05394
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.986 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11404
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE1408
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-35.83711
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13258
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+35.8376
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2-0.35x4'l+0.1x4'r+0.15001x1'r-9.62952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8554
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13505
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-35.83711
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12107
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+35.8376
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2-0.25x4'l-12.68683
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.987 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[184]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...y2-y3));penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...,4,5,6,7,8);hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8402)> ...pos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8402)> ...pos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8402)> ...pos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE8402)> ...pos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE8402)> ...beak_darkness,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.1025 repeat_once
                  ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE8402)> ...,beak_darkness,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.1025 repeat_once
                  ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8402)> ...;hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE8402)> ...;hpos_corr=-0.5u;put_accent
                                                  ; ENDFOR
l.1025 repeat_once
                  ;
Maybe Jackowski knows how to change them...

[185]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.1040 penpos1(alpha*(z_stem-tiny),0)
                                     ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.1040 ...tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.1041 penpos3(alpha*(z_stem-tiny),0)
                                     ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.1041 ...tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.1048 arm(5,6,a,beak_darkness,-.4beak_jut)
                                           ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.1051 arm(7,8,b,beak_darkness,.6beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[186]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...y2-y3));penpos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(1)> ...iny),0);penpos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9478)> ...pos1(alpha*(z_stem-tiny),0)
                                                  ;penpos2(alpha*(z_stem-tin...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9478)> ...pos2(alpha*(z_stem-tiny),0)
                                                  ;penpos3(alpha*(z_stem-tin...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9478)> ...pos3(alpha*(z_stem-tiny),0)
                                                  ;penpos4(alpha*(z_stem-tin...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
<for(%CAPSULE9478)> ...pos4(alpha*(z_stem-tiny),0)
                                                  ;pair.delta;delta=penoffse...
l.1083 repeat_once
                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9478)> ...beak_darkness,-0.4beak_jut)
                                                  ;pos7(arm_thickness2,-90);...
l.1083 repeat_once
                  ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
<for(%CAPSULE9478)> ...,beak_darkness,0.6beak_jut)
                                                  ;penlabels(1,2,3,4,5,6,7,8...
l.1083 repeat_once
                  ;
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[187]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.1114 ...90); pos16(hair,-180); pos17(flare,-180)
                                                  ;
Maybe Jackowski knows how to change them...

[188]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exbraces.mf
 Ok [94] [126] [23] [40] [41] [60] [124] [62] [91] [93] [92] [123] [125]
[95] [127] [32])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/expunct.mf
 Ok [14] [15] [19] [20]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.126 comma(1,a,pdot_diam,.2u,comma_depth)
                                          ;  % dot and tail
Maybe Jackowski knows how to change them...

[13]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.135 comma(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.136 comma(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[18]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.143 pickup tiny.nib; pos3(pdot_diam,0)
                                        ; pos4(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.143 ...ib; pos3(pdot_diam,0); pos4(pdot_diam,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.147 pickup fine.nib; pos1(pdot_diam,0)
                                        ; pos2(bot_width,0);
Maybe Jackowski knows how to change them...

> 0 NNE 1 (NNW WNW) WSW 2 (SSW) SSE 3 SSW WSW 4 WNW NNW NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.152  filldraw z1r...z0...z1l---z2l--z2r---cycle;
                                                   fi  % stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[33]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.162 ...1,a,pdot_diam,.28u,vround 1.5comma_depth)
                                                  ;  % large comma
Maybe Jackowski knows how to change them...

[39]
! angle(0,0) is taken as zero.
<for(-90)> ...ic.theta;theta=angle(z[(EXPR0)]-z0);
                                                  fill.z0+0.5(0,-thin_join)r...
l.179 ...(0,thin_join)rotated theta--cycle; endfor
                                                    % diagonal at angle |d|
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! angle(0,0) is taken as zero.
<for(90)> ...ric.theta;theta=angle(z[(EXPR0)]-z0);
                                                  fill.z0+0.5(0,-thin_join)r...
l.179 ...(0,thin_join)rotated theta--cycle; endfor
                                                    % diagonal at angle |d|
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

[42] [43]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.194 comma(1,a,pdot_diam,.2u,comma_depth)
                                          ;  % dot and tail
Maybe Jackowski knows how to change them...

[44]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.200 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.200 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

[46] [47]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.217 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 pos3(pdot_diam,0)
                       ; pos4(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 pos3(pdot_diam,0); pos4(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

[58]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.227 pos1(pdot_diam,0)
                       ; pos2(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.227 pos1(pdot_diam,0); pos2(pdot_diam,90)
                                           ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.230 comma(3,a,pdot_diam,.2u,comma_depth)
                                          ;  % lower dot and tail
Maybe Jackowski knows how to change them...

[59] [61]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.251 ...1,a,pdot_diam,.28u,vround 1.5comma_depth)
                                                  ;  % large ammoc
Maybe Jackowski knows how to change them...

[96]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.260 pickup tiny.nib; pos3(pdot_diam,0)
                                        ; pos4(pdot_diam,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.260 ...ib; pos3(pdot_diam,0); pos4(pdot_diam,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.264 pickup fine.nib; pos1(pdot_diam,0)
                                        ; pos2(top_width,0);
Maybe Jackowski knows how to change them...

> 0 SSW 1 (SSE ESE) ENE 2 (NNE) NNW 3 NNE ENE 4 ESE SSE SSW 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.269  filldraw z1l...z0...z1r---z2r--z2l---cycle;
                                                   fi  % stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[189]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.279 comma(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

comma->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.280 comma(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[17] [45]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.300 ammoc(1,a,pdot_diam,.25u,comma_depth)
                                           ; % left dot and tail
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

ammoc->pickup.fine.nib;pos(SUFFIX0)((EXPR2),90)
                                               ;if.square_dots:pos(SUFFIX0)'...
l.301 ammoc(2,b,pdot_diam,.25u,comma_depth)
                                           ; % right dot and tail
Maybe Jackowski knows how to change them...

[16] [21] [22])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exaccent.mf
 Ok
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ..._beginchar;;adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.23 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ..._beginchar;;adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.23 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE12749)> ...adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.23 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_gravis->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE12749)> ...adjust_fit(0,0);put_gravis
                                                  ; ENDFOR
l.23 repeat_once
                ;
Maybe Jackowski knows how to change them...

[0]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...fs:1.5fi.u#;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.31 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...fs:1.5fi.u#;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.31 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE9913)> ...;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.31 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE9913)> ...;adjust_fit(0,0);put_accent
                                                  ; ENDFOR
l.31 repeat_once
                ;
Maybe Jackowski knows how to change them...

[1] [2]
! Inconsistent equation (off by -20.00049).
<to be read again> 
                   ;
lowercase_tilde->...]l-0.25vair)-top.y[(EXPR4)]r);
                                                  filldraw.z[(EXPR4)]l..cont...
l.43 ...if variant_g: -1/6acc_height fi,1,2,3,4,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> xpart delta+4
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR4)]l+delta)and
                                                  (z[(EXPR6)]l-delta)..z[(EX...
l.43 ...if variant_g: -1/6acc_height fi,1,2,3,4,5)
                                                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-73.59952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR6)]l-delta)..
                                                  z[(EXPR6)]l..z[(EXPR7)]l--...
l.43 ...if variant_g: -1/6acc_height fi,1,2,3,4,5)
                                                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -xpart delta-81
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   and
lowercase_tilde->...controls(z[(EXPR7)]r-delta)and
                                                  (z[(EXPR5)]r+delta)..z[(EX...
l.43 ...if variant_g: -1/6acc_height fi,1,2,3,4,5)
                                                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xpart delta-3.40048
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
lowercase_tilde->...delta)and(z[(EXPR5)]r+delta)..
                                                  z[(EXPR5)]r..z[(EXPR4)]r--...
l.43 ...if variant_g: -1/6acc_height fi,1,2,3,4,5)
                                                  ;
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[3] [4]
! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...;if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...;if.monospace:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(1)> ...-2u;put_accent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8619)> ...ce:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE8619)> ...ce:hpos_corr=-2u;put_accent
                                                  ;hpos_corr=2u;put_accent;e...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  z[jj]top=directionpoint.le...
<for(%CAPSULE8619)> ...ent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

! The direction doesn't occur.
<to be read again> 
                   ;
directionpoint->..."The direction doesn't occur");
                                                  fi.point.a_.of(EXPR3)endgroup
<to be read again> 
                   ;
put_accent->...]r-z[ii]r}..{z[ii]l-z[jj]l}z[jj]l);
                                                  else:pickup.fine.nib;filld...
<for(%CAPSULE8619)> ...ent;hpos_corr=2u;put_accent
                                                  ;else:hpos_corr=-1.5u;put_...
l.59 repeat_once
                ;
Maybe Jackowski knows how to change them...

[5]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

lowercase_circle->...enpos[(EXPR5)](circ_hair,180)
                                                  ;penpos[(EXPR7)](circ_hair...
l.65 ...5w,vround(1/3[x_height,h]+apex_o),1,2,3,4)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...

lowercase_circle->...;penpos[(EXPR7)](circ_hair,0)
                                                  ;x[(EXPR4)]=x[(EXPR6)]=(EX...
l.65 ...5w,vround(1/3[x_height,h]+apex_o),1,2,3,4)
                                                  ;
Maybe Jackowski knows how to change them...

[6] [7] [8] [9] [10] [11] [12])
(/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exsign.mf
 Ok [24]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.52 if serifs: pickup crisp.nib; pos1(flare,0)
                                               ; pos2(vair,0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.53  pos3(flare,0)
                   ; pos4(vair,0);
Maybe Jackowski knows how to change them...

> 0 SSE SSW WSW WNW NNW NNE 1 2 (NNW WNW) WSW 3 (SSW) SSE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.54  y1+.5stem=h; filldraw circ_stroke z1e--z2e;
                                                   % left stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSE SSW WSW WNW NNW NNE 1 2 (NNW WNW) WSW 3 (SSW) SSE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.55  filldraw circ_stroke z3e--z4e;
                                      % right stem and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[34] [35]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.99  pos10(flare,0)
                    ; pos9(flare,180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.99  pos10(flare,0); pos9(flare,180)
                                     ;
Maybe Jackowski knows how to change them...

[36] [37]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.156 pos10(vair,270); pos11(.5[vair,flare],360)
                                                ;
Maybe Jackowski knows how to change them...

[64]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.180 pos0(flare,0)
                   ; pos1(hair,0); pos2(vair,90); pos3(stem,180);
Maybe Jackowski knows how to change them...

> 0 ENE 1 NNE 2 ENE 3 ESE SSE ESE ENE NNE 4 NNW WNW WSW SSW SSE ESE 5 ENE NNE N
NW WNW NNW NNE ENE 6 ESE SSE SSW WSW WNW NNW 7 (NNE) ENE 8 (ESE) SSE ESE ENE NN
E NNW WNW 9 WSW SSW SSE ESE SSE SSW WSW 10 WNW NNW NNE ENE ESE SSE 11 SSW WSW W
NW NNW WNW 12 WSW SSW 13 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.192  ..{right}z8e...{up}z9e;
                                % loop and arm
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[191]
> 0 NNE 1 ENE NNE 2 (NNW WNW) WSW 3 SSW WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.219  bulb(2,1,0)
                  ; bulb(8,9,10);  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 SSW 1 WSW SSW 2 (SSE ESE) ENE 3 NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.219  bulb(2,1,0); bulb(8,9,10)
                                ;  % bulbs
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[159]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrlig.mf
 Ok [25]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.45 ...ir,-90); pos6(hair,-180); pos7(flare,-180)
                                                  ;
Maybe Jackowski knows how to change them...

[26]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.75  pos2(bulb_diam,0)
                       ; x2r=x12r;
Maybe Jackowski knows how to change them...

[28]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.106  pos2(bulb_diam,0)
                        ; pos12(bulb_diam,0);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.106  pos2(bulb_diam,0); pos12(bulb_diam,0)
                                            ;
Maybe Jackowski knows how to change them...

[27]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.135  pos2(bulb_diam,0)
                        ; x2r=x11r-stem_corr;
Maybe Jackowski knows how to change them...

[29]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.160  pos2(bulb_diam,0)
                        ; x2r=x11r-stem_corr;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.161  pos12(bulb_diam,0)
                         ; x12r=x21r;
Maybe Jackowski knows how to change them...

[30]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.200  pos2(bulb_diam,0)
                        ; x2r=x11r-stem_corr;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.201  pos12(bulb_diam,0)
                         ; x12r=x21r-stem_corr;
Maybe Jackowski knows how to change them...

[31]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exromp.mf
 Ok
> 0 ENE 1 2 NNE NNW WNW 3 (NNW) NNE 4 (ENE) ESE SSE SSW WSW 5 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.31  filldraw stroke z0e---z1e...{left}z2e;
                                              % short diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[38]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 pickup tiny.nib; pos7(dot_size,0)
                                      ; pos8(dot_size,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.68 ...y.nib; pos7(dot_size,0); pos8(dot_size,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.79 if serifs: pos1(hair,180); pos0(flare,180)
                                               ;
Maybe Jackowski knows how to change them...

[63]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.89 pickup tiny.nib; pos7(dot_size,0)
                                      ; pos8(dot_size,90);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.89 ...y.nib; pos7(dot_size,0); pos8(dot_size,90)
                                                  ;
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.100 if serifs: pos1(hair,0); pos0(flare,0)
                                            ;
Maybe Jackowski knows how to change them...

[190]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrulett.mf
 Ok
! Square root of -44.98398 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.27 ...ratio(2,left_stem,y2-y1,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 penpos1(alpha*left_stem,0)
                               ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.28 ...a*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 penpos3(alpha*right_stem,0)
                                ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.29 ...right_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ESE 1 SSE SSW WSW WNW 2 WSW 3 WNW 4 (WSW SSW SSE) ESE 5 (ENE NNE NNW) WNW N
NW NNE ENE ESE 6 ENE 7 ESE SSE SSW WSW 8 (SSW SSE ESE) ENE 9 (NNE NNW WNW) WSW 
10 11 WNW NNW NNE ENE 12 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.36   --diag_end(2l,1l,1,1,1r,0)--cycle;
                                          fi % left and right diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE ENE) ESE 3 (SSE SSW) WSW 0 (SSW SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.40 y5r-y5l=y6r-y6l=cap_band; penstroke z5e--z6e;
                                                   % bar line
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE SSW) WSW 2 (SSW SSE ESE) ENE 3 NNE 4 ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.45 ...',2,a,1/2,outer_jut,b,.6,inner_jut)(dark);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (SSW SSE) ESE 2 (SSE SSW) WSW 3 (WNW NNW) NNE 4 (NNW WNW) WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.46 ...rif(4',3,c,1/2,inner_jut,d,1/3,outer_jut);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[65] [66] [67] [68]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.138 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.146 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.146 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.149 arm(8,9,h,beak_darkness,1.5beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[69]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.164 arm(3,4,e,beak_darkness,beak_jut)
                                       ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.172 arm(5,6,f,beak_darkness,0)
                                ; arm(0,7,g,beak_darkness,0);  % middle arm ...
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.172 ...k_darkness,0); arm(0,7,g,beak_darkness,0)
                                                  ;  % middle arm and serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[70] [71] [72] [73]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.281  pos5(flare+(cap_stem-stem),-180)
                                       ;
Maybe Jackowski knows how to change them...

[74]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.309 penpos3(alpha1*(stem1-tiny),0)
                                    ; penpos4(whatever,-90);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.311 penpos6(alpha2*(stem2-tiny),0)
                                    ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 SSW SSE ESE 2 ENE 3 ESE SSE SSW WSW 4 5 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.319 ...diag_end(4r,3'r,1,.5,3'l,4l)--z4l--cycle;
                                                    % upper diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[75]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.338 arm(3,4,e,1.2beak_darkness,beak_jut)
                                          ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[76]
! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-55.50012,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-55.50012,17)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.368   {z6-z5}diag_in(5l,6l,1,6r)
                                  ..diag_out(7l,1,7r,8r){z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-21.50012,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x-21.50012,17)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.368 ...diag_in(5l,6l,1,6r)..diag_out(7l,1,7r,8r)
                                                  {z8-z7}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_out->...,y_)=whatever[z(SUFFIX4),z(SUFFIX5)];
                                                  z(SUFFIX4)-(EXPR3)*length(...
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-118.00049,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_out->...(EXPR3)*length(z(SUFFIX4)-(to_x,y_))*
                                                  unitvector(z(SUFFIX4)-z(SU...
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-to_x-118.00049,17)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   {
diag_out->...))*unitvector(z(SUFFIX4)-z(SUFFIX2)){
                                                  z(SUFFIX4)-z(SUFFIX2)}...{...
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.370   ..z8r--diag_out(8r,1,8l,7l)
                                   {z7-z8}
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
l.371   if y0<=lower_notch: ..{z7-z8}z0{
                                        z5-z6}..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+41.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+41.00024,17)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.373   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE SSE SSW WSW 4 WNW 5 WSW 6 SSW SSE
 ESE 7 ENE NNE NNW NNE ENE 8 ESE SSE SSW SSE ESE 9 ENE NNE NNW WNW 10 WSW 0 (SS
W SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.373   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[77]
! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x-116.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x-116.00024,17)
>> (1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.404   {z6-z5}diag_in(5l,6l,1,6r)
                                  --z6r..
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_in->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (EXPR4)[z(SUFFIX3),(from_x...
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_in->...IX3)];(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> (-from_x+39.00024,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   *
diag_in->...EXPR4)*length(z(SUFFIX3)-(from_x,y_))*
                                                  unitvector(z(SUFFIX5)-z(SU...
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> (-from_x+39.00024,17)
>> (-1,0)
! Not implemented: (unknown pair)*(pair).
<to be read again> 
                   endgroup
l.406   {z5-z6}diag_in(6r,5r,1,5l)
                                  --cycle;  % diagonal
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

> 0 ESE SSE SSW WSW 1 WNW NNW NNE ENE 2 3 ESE 4 ENE NNE NNW WNW 5 WSW 0 (SSW SS
E)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.406   {z5-z6}diag_in(6r,5r,1,5l)--cycle;
                                            % diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[78] [79] [80]
! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-13.60005,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -13.60005
>> (-0.25from_x-3.40001,4.25)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.25from_x-3.40001,4.25)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)+(EXPR5)*len...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-63.39993,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -63.39993
>> (-to_x-63.39993,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-63.39993,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.25from_x-10.20004
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.474  fill diag_end(6r,5r,.25,1,5l,6l)
                                       --diag_end(5l,6l,.5,1,6r,5r)--cycle; ...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x-119.39987,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -119.39987
>> (-0.5from_x-59.69994,8.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-0.5from_x-59.69994,8.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-to_x-69,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -69
>> (-to_x-69,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-69,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> 0.5from_x-59.69994
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.474 ...,.25,1,5l,6l)--diag_end(5l,6l,.5,1,6r,5r)
                                                  --cycle;  % tail
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 ENE NNE NNW WNW 2 WSW SSW SSE SSW WSW 3 (WNW NNW) NNE 4 (NNW) WNW NNW NNE E
NE 6 ESE SSE SSW SSE ESE 7 (ENE) NNE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.474 ...l,6l)--diag_end(5l,6l,.5,1,6r,5r)--cycle;
                                                    % tail
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[81] [82]
> 0 WSW 1 (SSW) SSE ESE SSE SSW WSW 2 (WNW NNW) NNE 3 ENE NNE NNW WNW NNW 0 (WN
W)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.534 ...stroke z1e{x2-x1,10(y2-y1)}....{left}z2e;
                                                    % upper arc
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[83]
> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.563 arm(3,4,e,beak_darkness,.7beak_jut)
                                         ;  % right arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.565 arm(3,5,f,beak_darkness,-.7beak_jut)
                                          ;  % left arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[84] [85]
! Square root of -106.22308 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.599 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.600 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.601 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.613 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.613 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.614 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.614 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[86]
! Square root of -56.23236 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.630 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 penpos1(alpha*stem1,0)
                            ; penpos2(alpha*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.631 ...s1(alpha*stem1,0); penpos2(alpha*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 penpos3(alpha*stem2,0)
                            ; penpos4(alpha*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.632 ...s3(alpha*stem2,0); penpos4(alpha*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 penpos5(alpha*stem3,0)
                            ; penpos6(alpha*stem3,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.633 ...s5(alpha*stem3,0); penpos6(alpha*stem3,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 penpos7(alpha*stem4,0)
                            ; penpos8(alpha*stem4,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.634 ...s7(alpha*stem4,0); penpos8(alpha*stem4,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.661 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.662 ...7,c,.6,inner_jut4,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[87]
>> 42
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1763 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -2.60222
! Division by zero.
<to be read again> 
                   endgroup
l.676 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> 42
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1763 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -2.52998
! Division by zero.
<to be read again> 
                   endgroup
l.677 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 penpos1(alpha1*stem1,0)
                             ; penpos2(alpha2*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.678 ...(alpha1*stem1,0); penpos2(alpha2*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 penpos3(alpha2*stem2,0)
                             ; penpos4(alpha1*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.679 ...(alpha2*stem2,0); penpos4(alpha1*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

>> %CAPSULE12005
>> (-x0-95.1881,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE9046
>> (0.9x13+0.1x0-14.10509,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.9x13-0.1x0+14.10509,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 14.10509
>> (-0.9x13-0.1x0+14.10509,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.9x13-0.1x0+14.10509,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+86.6881
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-95.1881
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x13+0.1x0-14.10509
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x13+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.685  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x13+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.685  fill diag_end(12,1r,.5,1,1l,13')--z13'--
                                               diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12069
>> (-0.9x13-0.1x0+15.58586,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE8528
>> (x0+90.67345,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-x0-90.67345,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -90.67345
>> (-0.5x0-45.33673,8.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.5x0-45.33673,8.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+1.41414
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -0.9x13-0.1x0+15.58586
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0+90.67345
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x0-45.33672
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.685 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.686   --
          diag_end(34',4l,.5,1,4r,24')--z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12210
>> (-x0+16.70732,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE8714
>> (0.9x24+0.1x0+92.58586,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.9x24-0.1x0-92.58586,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -92.58586
>> (-0.9x24-0.1x0-92.58586,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.9x24-0.1x0-92.58586,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-8.20732
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+16.70732
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x24+0.1x0+92.58586
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x24+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.686   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.9x24+0.1x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.687   --
          diag_end(24',2r,1,.5,2l,12)--z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10970
>> (-0.9x24-0.1x0-88.14357,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE10960
>> (x0-18.11574,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-x0+18.11574,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 18.11574
>> (-0.5x0+9.05788,8.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.5x0+9.05788,8.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+71.14357
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -0.9x24-0.1x0-88.14357
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-18.11574
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x0+9.05786
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.687   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.687   --diag_end(24',2r,1,.5,2l,12)--z12--
                                            cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
l.693  prime_points_inside(1,4)
                               ; prime_points_inside(2,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.693 ...nts_inside(1,4); prime_points_inside(2,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
l.694  prime_points_inside(3,2)
                               ; prime_points_inside(4,1);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.694 ...nts_inside(3,2); prime_points_inside(4,1)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x2'l+x1'r+77.54945
! Unknown relation will be considered false.
<to be read again> 
                   :
l.695 ...1'r+cap_jut+.5u+1<=lft x2'l-cap_jut-xjut:
                                                   inner_jut1=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4'l+x3'r+77.54945
! Unknown relation will be considered false.
<to be read again> 
                   :
l.697 ...3'r+cap_jut+.5u+1<=lft x4'l-cap_jut-xjut:
                                                   inner_jut2=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE8509
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x1'l-0.5x1'r-37.93927,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r-37.93927,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11457
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2-37.93976
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12230
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+37.93927
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2-0.16667x1'l-0.33334x1'r-28.13744
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8075
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x2'l-0.5x1'r-16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x1'l-0.5x1'r-37.93927,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r-37.93927,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10295
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2-37.93878
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13262
>> (-0.5x1'l-0.5x1'r-37.93927,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+37.93927
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.b2+0.16667x2'l-0.16667x1'l-17.98601
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x2'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l-0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.699 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8389
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x3'r+16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-40.5415,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-40.5415,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11873
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-40.54102
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11511
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+40.5415
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.c2-0.33333x4'l+0.16667x4'r+0.16667x3'r-8.17384
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x3'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x3'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11187
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-40.5415,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-40.5415,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11180
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-40.54102
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10944
>> (-0.5x4'l-0.5x4'r-40.5415,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+40.5415
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.d2-0.33334x4'l-0.16667x4'r-24.18349
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.700 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8721
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x2'l+0.5x1'r+16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x2'l-0.5x2'r-37.5438,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.e2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-37.5438,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12583
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.e2-37.5433
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12689
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.e2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+37.5438
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.e2-0.33333x2'l+0.16667x2'r+0.16667x1'r-7.17462
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.e2-0.5x2'l+x2'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10871
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x2'l-0.5x2'r-37.5438,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.f2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-37.5438,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12222
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.f2-37.5433
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10659
>> (-0.5x2'l-0.5x2'r-37.5438,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.f2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+37.5438
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.f2-0.25x2'l-14.50523
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.f2+x2'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.702   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8141
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x3'l-0.5x3'r-35.01392,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.g2,10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r-35.01392,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'l,17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9278
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.g2-35.0144
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9506
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.g2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r+35.01392
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.g2-0.25x3'r-21.7736
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.g2+x3'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10522
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x3'r-16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x3'l-0.5x3'r-35.01392,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.h2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r-35.01392,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11843
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.h2-35.01343
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE8672
>> (-0.5x3'l-0.5x3'r-35.01392,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.h2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r+35.01392
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.h2+0.16667x4'l-0.16667x3'l-17.01091
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.h2+0.5x4'l+0.5x3'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x3'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.704   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[88]
>> 75.77045
! Division by zero.
<to be read again> 
                   ;
l.716 dy=y1-y2; alpha=((x2l-x1l)++dy)/dy;
                                         
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.725 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12671
>> (-x0-3276.12921,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-93.77045,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -93.77045
>> (-to_x-93.77045,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-93.77045,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+3259.12921
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-3276.12921
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.725 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z5r
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.726     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.726     --diag_end(5r,6r,1,1,6l,5l)
                                     --z5l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12694
>> (x0-3199.12921,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+16.77045,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 16.77045
>> (-from_x+16.77045,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+16.77045,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+3199.12921,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 3199.12921
>> (-x0+3199.12921,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+3199.12921,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-3199.12921
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.727     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi  % diagonals and stem
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
l.729  prime_points_inside(1,2)
                               ; prime_points_inside(4,3); prime_points_insi...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.729 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ; prime_points_inside(6,5);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! angle(0,0) is taken as zero.
prime_points_inside->...le(z(SUFFIX1)-z(SUFFIX0))+
                                                  90;fi.z(SUFFIX0)'l+(pen_lf...
l.729 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The `angle' between two identical points is undefined.
I'm zeroing this one. Proceed, with fingers crossed.

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.729 ...nts_inside(4,3); prime_points_inside(6,5)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+77.54945
! Unknown relation will be considered false.
<to be read again> 
                   :
l.730  if rt x1'r+cap_jut+.5u+1<=lft x4'l-cap_jut:
                                                   inner_jut=cap_jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE8538
>> (-0.5x1'l-0.5x1'r+1532.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13693
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+1532.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13607
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1532.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-1024.30511
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12704
>> (-0.5x1'l-0.5x1'r+1532.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-1532.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9956
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+1532.17987
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11629
>> (0.5x1'l+0.5x1'r-1532.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-1532.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-770.0945
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.732 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE8504
>> (-0.5x4'l-0.5x4'r-1608.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+16.01924
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11447
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-1608.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13464
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1608.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2+0.05x4'l+0.5x4'r+0.15001x1'r+648.06775
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+16.01924
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11758
>> (-0.5x4'l-0.5x4'r-1608.17938,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x4'l+0.5x4'r+1608.17938,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10248
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-1608.1789
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10113
>> (0.5x4'l+0.5x4'r+1608.17938,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+1608.17938
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2+0.25x4'l+0.5x4'r+808.35634
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+17.06662
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.733 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[89]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.751 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.752 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.759 arm(5,6,a,beak_darkness**.8,-.4beak_jut)
                                              ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.762 arm(7,8,b,beak_darkness**.9,.6beak_jut)
                                             ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[90]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrllett.mf
 Ok
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.25 if serifs: pos1(flare,180)
                               ; pos2(hair,180);
Maybe Jackowski knows how to change them...

[97]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.84 ...))intersectionpoint(z3l{up}...{right}z4l))
                                                  ;
Maybe Jackowski knows how to change them...

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.85 ...0))intersectionpoint(z6l{left}...{up}z7l))
                                                  ;
Maybe Jackowski knows how to change them...

[98]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.100 if serifs: pos1(hair,0); pos0(flare,0)
                                            ;
Maybe Jackowski knows how to change them...

> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.108   ..tension .9 and 1..{x5-x4,5(y5-y4)}z5e;
                                                  % arc and lower terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[99]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.141 ...))intersectionpoint(z3l{up}...{left}z4l))
                                                  ;
Maybe Jackowski knows how to change them...

[100]
> 0 NNE 1 ENE 2 NNE 3 NNW WNW 4 5 NNW 6 (WNW) WSW 7 (SSW) SSE ESE 8 9 SSE 10 SS
W WSW 11 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.168   ...{x5-x4,5(y5-y4)}z5e;
                                % left bowl, arc, and terminal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
<for(r)> ...(SUFFIX0)))intersectionpoint.testpath)
                                                  ; ENDFOR
l.178 ...y0$)) intersectionpoint testpath); endfor
                                                  
Maybe Jackowski knows how to change them...

[101]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.189  pos2(bulb_diam,0)
                        ; y2+.5bulb_diam=.9[x_height,h+oo];
Maybe Jackowski knows how to change them...

[102]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.223  pos6(hair,0); pos7(.5[hair,flare],0)
                                           ; x5=.75[x0,x6]; top y5r=h+o;
Maybe Jackowski knows how to change them...

> 0 SSE 1 (ESE) ENE NNE NNW WNW WSW SSW SSE ESE 2 (SSE) SSW 3 (WSW) WNW NNW NNE
 ENE ESE SSE SSW WSW 0 (SSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.225  filldraw stroke z0e..{right}z5e;
                                        bulb(5,6,7);  % ear
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[103] [104] [105]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.334 ...r,-90); pos6(hair,-180); pos7(flare,-180)
                                                  ;
Maybe Jackowski knows how to change them...

[106]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.366 penpos3(alpha1*(stem3-tiny),0)
                                    ; penpos4(whatever,-90);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.367 ...[z5l,z5r]; penpos6(alpha2*(stem4-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 SSW SSE ESE 2 ENE 3 ESE SSE SSW WSW 4 5 (WNW NNW) NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.374 ...diag_end(4r,3'r,1,.5,3'l,4l)--z4l--cycle;
                                                    % upper diagonal
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[107] [108] [109] [110] [111]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.477 ...)intersectionpoint(z3l{up}...{right}z4l))
                                                  ;
Maybe Jackowski knows how to change them...

[112]
! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.506 ...))intersectionpoint(z3l{up}...{left}z4l))
                                                  ;
Maybe Jackowski knows how to change them...

! The paths don't intersect.
<to be read again> 
                   ;
intersectionpoint->...The paths don't intersect");
                                                  origin.else:0.5[point.x_.o...
<to be read again> 
                   )
l.507 ...)intersectionpoint(z6l{right}...{up}z7l))
                                                  ;
Maybe Jackowski knows how to change them...

[113]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.527  pos6(r_flare,0)
                      ; bulb(4,5,6);  % bulb
Maybe Jackowski knows how to change them...

[114] [115] [116] [117]
! Square root of -284.8589 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.653 ...tio(2,right_stem,y1-y2,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.654 penpos1(alpha*left_stem,0)
                                ; penpos2(alpha*left_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.654 ...*left_stem,0); penpos2(alpha*left_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.655 penpos3(alpha*right_stem,0)
                                 ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.655 ...ight_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.667 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.667 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.668 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.668 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[118]
! Square root of -272.8589 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.685 ...+stem4,y1-y2,x8r-x1l+mid_corr-2apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.686 penpos1(alpha*stem1,0)
                            ; penpos2(alpha*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.686 ...s1(alpha*stem1,0); penpos2(alpha*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.687 penpos3(alpha*stem2,0)
                            ; penpos4(alpha*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.687 ...s3(alpha*stem2,0); penpos4(alpha*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.688 penpos5(alpha*stem3,0)
                            ; penpos6(alpha*stem3,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.688 ...s5(alpha*stem3,0); penpos6(alpha*stem3,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.689 penpos7(alpha*stem4,0)
                            ; penpos8(alpha*stem4,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.689 ...s7(alpha*stem4,0); penpos8(alpha*stem4,0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.716 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.716 ...f(1',2,a,1/3,outer_jut,b,1/2,inner_jut1);
                                                    % left serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW 2 (NNW NNE) ENE 3 (ESE SSE) SSW 4 (SSE ESE) ENE 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.717 ...7,c,.6,inner_jut4,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 (WNW NNW NNE) ENE 2 (NNE NNW WNW) WSW 3 SSW 4 WSW 5 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
serif->...FFIX2),y(SUFFIX4)0)--z(SUFFIX4)3--cycle;
                                                  labels((SUFFIX4)1,(SUFFIX4...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.717 ...7,c,.6,inner_jut4,d,1/2,outer_jut)(dark);
                                                   fi  % right serif
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[119]
>> 34
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.730 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1155 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.730 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -3.57968
! Division by zero.
<to be read again> 
                   endgroup
l.730 alpha1=diag_ratio(1,stem1,h,x4r-x1l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> 34
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.731 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1155 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.731 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -3.53566
! Division by zero.
<to be read again> 
                   endgroup
l.731 alpha2=diag_ratio(1,stem2,h,x2r-x3l)
                                          ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.732 penpos1(alpha1*stem1,0)
                             ; penpos2(alpha2*stem2,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.732 ...(alpha1*stem1,0); penpos2(alpha2*stem2,0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.733 penpos3(alpha2*stem2,0)
                             ; penpos4(alpha1*stem1,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.733 ...(alpha2*stem2,0); penpos4(alpha1*stem1,0)
                                                  ;
Maybe Jackowski knows how to change them...

>> %CAPSULE8418
>> (-x0-97.50763,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12465
>> (0.8x13+0.2x0-24.20154,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.8x13-0.2x0+24.20154,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 24.20154
>> (-0.8x13-0.2x0+24.20154,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.8x13-0.2x0+24.20154,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+89.00763
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0-97.50763
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.8x13+0.2x0-24.20154
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.8x13+0.2x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.739  fill diag_end(12,1r,.5,1,1l,13')
                                       --z13'--diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.8x13+0.2x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.739  fill diag_end(12,1r,.5,1,1l,13')--z13'--
                                               diag_end(13',3l,1,.5,3r,34')-...
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10038
>> (-0.8x13-0.2x0+24.9279,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE11181
>> (x0+95.28453,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-x0-95.28453,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -95.28453
>> (-0.5x0-47.64227,8.5)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.5x0-47.64227,8.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-7.9279
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -0.8x13-0.2x0+24.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0+95.28453
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x0-47.64226
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.739 ...,13')--z13'--diag_end(13',3l,1,.5,3r,34')
                                                  --z34'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.740   --
          diag_end(34',4l,.5,1,4r,24')--z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12819
>> (-x0+27.78127,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE9046
>> (0.8x24+0.2x0+93.9279,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.8x24-0.2x0-93.9279,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -93.9279
>> (-0.8x24-0.2x0-93.9279,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.8x24-0.2x0-93.9279,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-19.28127
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+27.78127
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.8x24+0.2x0+93.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.8x24+0.2x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.740   --diag_end(34',4l,.5,1,4r,24')
                                      --z24'
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.8x24+0.2x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.741   --
          diag_end(24',2r,1,.5,2l,12)--z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11245
>> (-0.8x24-0.2x0-91.7489,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12234
>> (x0-28.46353,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-x0+28.46353,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 28.46353
>> (-0.5x0+14.23177,8.5)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-0.5x0+14.23177,8.5)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_+74.7489
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -0.8x24-0.2x0-91.7489
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-28.46353
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x0+14.23177
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.741   --diag_end(24',2r,1,.5,2l,12)
                                     --z12--cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.741   --diag_end(24',2r,1,.5,2l,12)--z12--
                                            cycle; % diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 NNE ENE 1 2 ESE SSE SSW WSW 3 (WNW NNW) NNE 4 (ENE) ESE 5 (ENE NNE) NNW WNW
 6 WSW 7 SSW SSE ESE 8 (ENE) NNE 9 (ENE) ESE 10 (ENE NNE) NNW WNW 11 WSW 12 SSW
 SSE ESE 13 (ENE) NNE 14 (NNW WNW) WSW 15 (WNW NNW) NNE ENE 16 17 ESE SSE SSW W
SW 18 (WNW NNW) NNE 19 (NNW WNW) WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.741   --diag_end(24',2r,1,.5,2l,12)--z12--cycle;
                                                   % diagonals
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
l.747  prime_points_inside(1,4)
                               ; prime_points_inside(2,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.747 ...nts_inside(1,4); prime_points_inside(2,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
l.748  prime_points_inside(3,2)
                               ; prime_points_inside(4,1);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.748 ...nts_inside(3,2); prime_points_inside(4,1)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x2'l+x1'r+87.17612
! Unknown relation will be considered false.
<to be read again> 
                   :
l.749  if rt x1'r+jut+.5u+1<=lft x2'l-jut-xjut:
                                                inner_jut1=jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x4'l+x3'r+87.17612
! Unknown relation will be considered false.
<to be read again> 
                   :
l.751  if rt x3'r+jut+.5u+1<=lft x4'l-jut-xjut:
                                                inner_jut2=jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE10879
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x1'l-0.5x1'r-33.07332,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r-33.07332,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12314
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2-33.0738
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11845
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+33.07332
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2-0.16667x1'l-0.33334x1'r-25.53697
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9669
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x2'l-0.5x1'r-15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x1'l-0.5x1'r-33.07332,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x1'l-0.5x1'r-33.07332,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13679
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2-33.07283
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13583
>> (-0.5x1'l-0.5x1'r-33.07332,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r+33.07332
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.b2+0.16667x2'l-0.16667x1'l-16.25237
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x2'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l-0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.753 ...f(1',4,a,1/3,outer_jut,b,2/3,inner_jut1);
                                                    % upper left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9243
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x3'r+15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-36.65305,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-36.65305,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE8408
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-36.65256
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE13100
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+36.65305
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.c2-0.33333x4'l+0.16667x4'r+0.16667x3'r-6.9894
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x3'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x3'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x3'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11682
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-36.65305,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-36.65305,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE1437
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-36.65256
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11610
>> (-0.5x4'l-0.5x4'r-36.65305,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+36.65305
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.d2-0.33334x4'l-0.16667x4'r-20.94762
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.754 ...f(4',1,c,2/3,inner_jut2,d,1/3,outer_jut);
                                                    % lower right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12184
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x2'l+0.5x1'r+15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x2'l-0.5x2'r-35.17831,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.e2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-35.17831,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE12412
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.e2-35.17783
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12137
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.e2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+35.17831
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.e2-0.33333x2'l+0.16667x2'r+0.16667x1'r-6.49783
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.e2-0.5x2'l+x2'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x2'l+x2'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE9061
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x2'l-0.5x2'r-35.17831,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.f2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x2'l-0.5x2'r-35.17831,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x2'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE10869
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.f2-35.17783
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE11839
>> (-0.5x2'l-0.5x2'r-35.17831,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.f2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r+35.17831
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.f2-0.25x2'l-12.35718
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.f2+x2'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x2'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x2'l+0.5x2'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.756   f,1/2,outer_jut+xjut)(dark);
                                      % upper right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE13580
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x3'l-0.5x3'r-31.64268,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.g2,10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r-31.64268,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'l,17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11044
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.g2-31.64317
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9996
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.g2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r+31.64268
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.g2-0.25x3'r-21.05331
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.g2+x3'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x3'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE1599
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x3'r-15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x3'l-0.5x3'r-31.64268,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.h2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x3'l-0.5x3'r-31.64268,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x3'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE8674
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.h2-31.6422
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9047
>> (-0.5x3'l-0.5x3'r-31.64268,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.h2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r+31.64268
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.66667x.h2+0.16667x4'l-0.16667x3'l-15.7755
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.h2+0.5x4'l+0.5x3'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x3'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x3'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x3'l+0.5x3'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.758   h,2/3,inner_jut2+xjut)(dark);
                                      fi  % lower left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[120]
>> 34
! Division by zero.
<to be read again> 
                   ;
diag_ratio->...p.numeric.a_,b_;b_=(EXPR3)/(EXPR4);
                                                  a_=(EXPR2)*(EXPR2)-b_*b_;(...
l.773 ...ratio(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! Square root of -1152 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.773 ...ratio(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

>> -3.51715
! Division by zero.
<to be read again> 
                   endgroup
l.773 ...ratio(2,bot_stem,y1-y3,x4r-x1l-apex_corr)
                                                  ;
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.777 penpos3(alpha*bot_stem,0)
                               ; penpos4(alpha*right_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.777 ...*bot_stem,0); penpos4(alpha*right_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

>> 0.84187
! Division by zero.
<to be read again> 
                   ;
l.778 alpha3=(y1++(x2l-x1l))/y1;
                                
You're trying to divide the quantity shown above the error
message by zero. I'm going to divide it by one instead.

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
l.785 else: fill z0--
                     diag_end(0,4l,1,1,4r,3r)--z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE11495
>> (-x0+27.47104,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;(to_x,y_)=whatever[z(SUFF...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-to_x-92.11209,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> -92.11209
>> (-to_x-92.11209,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-to_x-92.11209,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_>x_:xx_:=x_:=0.5[xx_...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-10.47104
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_>x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.fi...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> -x0+27.47104
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...),(from_x,y_)]{z(SUFFIX3)-z(SUFFIX2)}
                                                  ...{z(SUFFIX6)-z(SUFFIX3)}...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> to_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.785 else: fill z0--diag_end(0,4l,1,1,4r,3r)
                                             --z3r--z2l
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  (to_x,y_)=whatever[z(SUFFI...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> %CAPSULE12532
>> (x0-51.73578,0)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
diag_end->...x,y_)=whatever[z(SUFFIX6),z(SUFFIX7)]
                                                  ;if.x(SUFFIX6)>x(SUFFIX3):...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 17).
<to be read again> 
                   ;
diag_end->...,y_)=whatever[z(SUFFIX6),z(SUFFIX7)];
                                                  if.x(SUFFIX6)>x(SUFFIX3):x...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-from_x+23.11209,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 23.11209
>> (-from_x+23.11209,17)
! Not implemented: (known numeric)+(unknown pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> x_
>> (-from_x+23.11209,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...XPR4)*length(z(SUFFIX3)-(from_x,y_));
                                                  xx_=x(SUFFIX6)-(EXPR5)*len...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> (-x0+51.73578,17)
! Not implemented: length(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
particular type. Continue, and I'll simply return the
argument (shown above) as the result of the operation.

>> 51.73578
>> (-x0+51.73578,17)
! Not implemented: (known numeric)-(unknown pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> xx_
>> (-x0+51.73578,17)
! Equation cannot be performed (numeric=pair).
<to be read again> 
                   ;
diag_end->...(EXPR5)*length(z(SUFFIX6)-(to_x,y_));
                                                  if.xx_<x_:xx_:=x_:=0.5[xx_...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> xx_-x_
! Unknown relation will be considered false.
<to be read again> 
                   :
diag_end->...ngth(z(SUFFIX6)-(to_x,y_));if.xx_<x_:
                                                  xx_:=x_:=0.5[xx_,x_];fi.el...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> from_x
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...fi.fi(EXPR4)[z(SUFFIX3),(from_x,y_)]{
                                                  z(SUFFIX3)-z(SUFFIX2)}...{...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
diag_end->...SUFFIX6)-z(SUFFIX3)}(x_,y(SUFFIX3))..
                                                  (xx_,y(SUFFIX3)){z(SUFFIX6...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> xx_
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
diag_end->...3)}(x_,y(SUFFIX3))..(xx_,y(SUFFIX3)){
                                                  z(SUFFIX6)-z(SUFFIX3)}...{...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0-51.73578
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
diag_end->...z(SUFFIX3)}...{z(SUFFIX7)-z(SUFFIX6)}
                                                  (EXPR5)[z(SUFFIX6),(to_x,y...
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x0
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   endgroup
l.786     --diag_end(2l,1l,1,1,1r,0)
                                    --cycle; fi % left and right diagonals
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.787 penpos5(alpha*bot_stem,0)
                               ; z5r=whatever[z3r,z4r]; y5-.5vair=-.5d;
Maybe Jackowski knows how to change them...

! Inconsistent equation (off by 20.5).
<to be read again> 
                   ;
l.787 ...); z5r=whatever[z3r,z4r]; y5-.5vair=-.5d;
                                                  
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x5r+119.58313
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(l)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.791  fill stroke z3e---z5e...{left}z6e;
                                          bulb(6,7,8);  % arc and bulb
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x5r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ..
...->..
       tension.atleast1..
<for(r)> ...SUFFIX0):=z3(SUFFIX0)---z5(SUFFIX0)...
                                                  {left}z6(SUFFIX0); ENDFOR
stroke->...rsuffixes.e=l,r:path_.e:=(TEXT2);endfor
                                                  .if.cycle.path_.l:errmessa...
<to be read again> 
                   ;
l.791  fill stroke z3e---z5e...{left}z6e;
                                          bulb(6,7,8);  % arc and bulb
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

> 0 SSW 1 (SSE ESE) ENE NNE 2 ENE 3 (ESE SSE) SSW WSW WNW NNW WNW 0 (WSW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.791 ...stroke z3e---z5e...{left}z6e; bulb(6,7,8)
                                                  ;  % arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! Inconsistent equation (off by 34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.793  prime_points_inside(1,2)
                               ; prime_points_inside(4,3);
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

! Inconsistent equation (off by -34).
<to be read again> 
                   ;
prime_points_inside->...r*(z(SUFFIX0)-z(SUFFIX1));
                                                  z(SUFFIX0)'r+(pen_rt,0)rot...
l.793 ...nts_inside(1,2); prime_points_inside(4,3)
                                                  ;
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -x4'l+x1'r+87.17612
! Unknown relation will be considered false.
<to be read again> 
                   :
l.794  if rt x1'r+jut+.5u+1<=lft x4'l-jut:
                                           inner_jut=jut;
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9365
>> (-0.5x1'l-0.5x1'r+38.26581,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.a2,-10)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   =
serif->...FIX4)2+penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)l+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'l,-17)
>> pen
! Not implemented: (unknown pair)+(pen).
<to be read again> 
                   +
serif->...)l+penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;lft.x(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11025
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  lft.x(SUFFIX4)0=lft.x(SUFF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.a2+38.26532
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3<x(SUFFIX4)2+eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2+e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9238
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.a2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-38.26581
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.83334x.a2+0.5x1'l+0.33334x1'r-28.99866
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.a2+x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x1'l-20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE10362
>> (-0.5x1'l-0.5x1'r+38.26581,17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by 10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> 0.5x4'l-0.5x1'r-15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.b2,-10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (0.5x1'l+0.5x1'r-38.26581,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x1'r,-17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE9056
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.b2+38.2663
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12647
>> (0.5x1'l+0.5x1'r-38.26581,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.b2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r-38.26581
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.b2+0.125x4'l+0.25x1'l+0.375x1'r-23.05394
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.b2+0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l-0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x1'r-15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x1'l+0.5x1'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.796 ...if(1',2,a,1/3,outer_jut,b,1/2,inner_jut);
                                                    % left serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE13626
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> -0.5x4'l+0.5x1'r+15.68419
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...ever[z(SUFFIX2),z(SUFFIX3)];if(EXPR6)<0:
                                                  z(SUFFIX4)2+penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.c2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE13396
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.c2-35.83711
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE9996
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.c2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+35.8376
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.7x.c2-0.35x4'l+0.1x4'r+0.15001x1'r-9.62952
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.c2-0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   ,
serif->...] ]{z(SUFFIX4)1-z(SUFFIX4)2}...{(EXPR6),
                                                  0}z(SUFFIX4)1--z(SUFFIX4)0...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -0.5x4'l+x4'r+0.5x1'r+15.68419
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...UFFIX2),(EXPR3),-(EXPR4))(SUFFIX8);
                                                  serif((SUFFIX0),(SUFFIX1),...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> %CAPSULE12270
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ]
serif->...UFFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)]
                                                  ;if(EXPR6)<0:z(SUFFIX4)2+p...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -10).
<to be read again> 
                   ;
serif->...FFIX4)3=whatever[z(SUFFIX2),z(SUFFIX3)];
                                                  if(EXPR6)<0:z(SUFFIX4)2+pe...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x.d2,10)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   =
serif->...FIX4)2-penoffset.downward.of.currentpen=
                                                  z(SUFFIX2)r-penoffset.down...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (-0.5x4'l-0.5x4'r-35.8376,-17)
>> pen
! Not implemented: penoffset(unknown pair)of(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> (x4'r,17)
>> pen
! Not implemented: (unknown pair)-(pen).
<to be read again> 
                   +
serif->...)r-penoffset.downward.of.pen_[tiny.nib]+
                                                  whatever*downward;rt.x(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> %CAPSULE11554
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (pen)+(unknown pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

>> pen
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Equation cannot be performed (pen=pair).
<to be read again> 
                   ;
serif->...ard.of.pen_[tiny.nib]+whatever*downward;
                                                  rt.x(SUFFIX4)0=rt.x(SUFFIX...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm sorry, but I don't know how to make such things equal.
(See the two expressions just above the error message.)

>> -x.d2-35.83711
! Unknown relation will be considered false.
<to be read again> 
                   :
serif->...+(EXPR6);if.x(SUFFIX4)3>x(SUFFIX4)2-eps:
                                                  x(SUFFIX4)3:=x(SUFFIX4)2-e...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
Oh dear. I can't decide if the expression above is positive,
negative, or zero. So this comparison test won't be `true'.

>> %CAPSULE12919
>> (-0.5x4'l-0.5x4'r-35.8376,-17)
! Not implemented: (unknown numeric)*(unknown pair).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I'm afraid I don't know how to apply that operation to that
combination of types. Continue, and I'll return the second
argument (see above) as the result of the operation.

! Inconsistent equation (off by -17).
<to be read again> 
                   ;
serif->...)1;corner=z(SUFFIX4)2+whatever*downward;
                                                  filldraw.z(SUFFIX4)2{z(SUF...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
The equation I just read contradicts what was said before.
But don't worry; continue and I'll just ignore it.

>> x.d2
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...+whatever*downward;filldraw.z(SUFFIX4)2{
                                                  z(SUFFIX2)-z(SUFFIX3)}...(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r+35.8376
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...ldraw.z(SUFFIX4)2{z(SUFFIX2)-z(SUFFIX3)}
                                                  ...(EXPR5)[corner,0.5[z(SU...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.75x.d2-0.25x4'l-12.68683
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
serif->...)[corner,0.5[z(SUFFIX4)1,z(SUFFIX4)2] ]{
                                                  z(SUFFIX4)1-z(SUFFIX4)2}.....
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> -x.d2+x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   }
serif->...,z(SUFFIX4)2] ]{z(SUFFIX4)1-z(SUFFIX4)2}
                                                  ...{(EXPR6),0}z(SUFFIX4)1-...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)2}...{(EXPR6),0}z(SUFFIX4)1--
                                                  z(SUFFIX4)0--(x(SUFFIX2),y...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> x4'r+20.9279
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->......{(EXPR6),0}z(SUFFIX4)1--z(SUFFIX4)0--
                                                  (x(SUFFIX2),y(SUFFIX4)0)--...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

>> 0.5x4'l+0.5x4'r
! Undefined x coordinate has been replaced by 0.
<to be read again> 
                   {
--->{
     curl1}..{curl1}
serif->...-z(SUFFIX4)0--(x(SUFFIX2),y(SUFFIX4)0)--
                                                  z(SUFFIX4)3--cycle;labels(...
<to be read again> 
                   ;
dish_serif->...SUFFIX5),(EXPR6),(EXPR7))(SUFFIX8);
                                                  if.dish>0:pickup.tiny.nib;...
<to be read again> 
                   ;
l.797 ...,3,c,.6,inner_jut,d,1/2,outer_jut)(dark);
                                                    % right serif
I need a `known' x value for this part of the path.
The value I found (see above) was no good;
so I'll try to keep going by using zero instead.
(Chapter 27 of The METAFONTbook explains that
you might want to type `I ???' now.)

[121]
! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.818 penpos1(alpha*(z_stem-tiny),0)
                                    ; penpos2(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.818 ...-tiny),0); penpos2(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.819 penpos3(alpha*(z_stem-tiny),0)
                                    ; penpos4(alpha*(z_stem-tiny),0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.819 ...-tiny),0); penpos4(alpha*(z_stem-tiny),0)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.826 arm(5,6,a,beak_darkness,-.4beak_jut)
                                          ;  % upper arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.829 arm(7,8,b,beak_darkness,.6beak_jut)
                                         ;  % lower arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[122]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exrdigit.mf
 Ok [48] [49]
> 0 ENE 1 (ESE SSE) SSW 2 (SSE ESE) ENE 3 NNE 4 (NNW WNW) WSW 5 6 (WNW NNW) NNE
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.65 arm(7,8,a,.3beak_darkness,beak_jut)
                                        ;  % arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.69  pos0(bulb_diam,180)
                         ; pos1(cap_hair,180);
Maybe Jackowski knows how to change them...

[50]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.109  pos0(bulb_diam1,180)
                           ; pos1(hair,180);
Maybe Jackowski knows how to change them...

! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.112  pos10(bulb_diam2,-180)
                             ; pos9(cap_hair,-180);
Maybe Jackowski knows how to change them...

[51]
! Square root of -0.12602 has been replaced by 0.
diag_ratio->...((EXPR2)*((EXPR5)++(EXPR4)*sqrt.a_)
                                                  -b_*(EXPR5))/a_/(EXPR4)end...
l.139 ...ha=diag_ratio(1,diag_stem,y3-y4l,x3r-x4l)
                                                  ;
Since I don't take square roots of negative numbers,
I'm zeroing this one. Proceed, with fingers crossed.

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.140 penpos3(alpha*diag_stem,0)
                                ; penpos4(alpha*diag_stem,0);
Maybe Jackowski knows how to change them...

! bad penpos (width is negative).
<to be read again> 
                   ;
penpos->...essage"bad penpos (width is negative)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.140 ...*diag_stem,0); penpos4(alpha*diag_stem,0)
                                                  ;
Maybe Jackowski knows how to change them...

[52]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.178  pos10(flare+1/3(cap_stem-stem),-180)
                                           ; bulb(8,9,10);  % bulb
Maybe Jackowski knows how to change them...

> 0 ENE 1 NNE 2 ENE 3 (ESE SSE) SSW 4 WSW 5 6 SSW 0 (SSE ESE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.185  arm(1,2,a,0,0)
                     ;  % arm
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[53]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.219 if serifs: pos1(hair,-360); pos0(flare,-360)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 NNE 1 2 (NNW WNW) WSW 3 (SSW) SSE ESE SSE SSW WSW 0 (WNW NNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.222  {{less_tense; bulb(2,1,0)
                                }};  % arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[54]
> 0 WSW 1 (WNW NNW) NNE 2 (NNW WNW) WSW 3 SSW 4 (SSE ESE) ENE 5 6 (ESE SSE) SSW
 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.241 arm(2,1,a,.3beak_darkness,-beak_jut)
                                          ;  % arm and beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 WSW 1 SSW 2 WSW 3 (WNW NNW) NNE 4 ENE 5 6 NNE 0 (NNW WNW)
! Strange path (turning number is zero).
<to be read again> 
                   ;
arm->...UFFIX2)r--z(SUFFIX4)0--z(SUFFIX3)r--cycle;
                                                  else:filldraw.z(SUFFIX2)l-...
l.244 arm(2',3,b,beak_darkness,x3r-x.a0)
                                        ;  % upward extension of beak
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

> 0 ENE 1 (NNE NNW) WNW NNW NNE ENE ESE SSE 2 (SSW) WSW 3 (WNW) NNW WNW WSW SSW
 SSE ESE 0
! Strange path (turning number is zero).
<to be read again> 
                   ;
l.252  filldraw stroke z4e...{down}z6e;
                                         % stroke
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[55] [56]
! bad pos (breadth of current pen wider than pos width).
<to be read again> 
                   ;
pos->...dth of current pen wider than pos width)";
                                                  fi.fi(x(SUFFIX2)r-x(SUFFIX...
l.328 if serifs: pos1(hair,-180); pos0(flare,-180)
                                                  ;
Maybe Jackowski knows how to change them...

> 0 SSW 1 2 (SSE ESE) ENE 3 (NNE) NNW WNW NNW NNE ENE 0 (ESE SSE)
! Strange path (turning number is zero).
<to be read again> 
                   ;
bulb->...FFIX0)r-x(SUFFIX1)r,0}z(SUFFIX0)r--cycle;
                                                  path_.r:=z(SUFFIX2)l{0,y(S...
l.331  {{less_tense; bulb(2,1,0)
                                }};  % arc and bulb
The path doesn't have a counterclockwise orientation,
so I'll probably have trouble drawing it.
(See Chapter 27 of The METAFONTbook for more help.)

[57]) (/usr/share/texlive/texmf-dist/fonts/source/jknappen/ec/exmligtb.mf
 Ok) ) ) ) 
Here is how much of METAFONT's memory you used:
 667 strings out of 5259
 8281 string characters out of 69759
 49331 words of memory out of 5000000
 1533 symbolic tokens out of 9500
 13i,79n,0r,29p,239b stack positions out of 300i,300n,1000r,150p,200000b
 
(You used 3w,8h,3d,1i,9l,0k,0e,16p metric file positions
  out of 256w,16h,16d,64i,15000l,2500k,256e,60p)

Font metrics written on ectt0.tfm.
Output written on ectt0.720gf (256 characters, 88736 bytes).
