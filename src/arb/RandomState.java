/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package arb;

import arb.stochastic.processes.RandomVectorGenerator;

public class RandomState implements AutoCloseable,RandomVectorGenerator {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public RandomState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(RandomState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        arbJNI.delete_RandomState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static { System.loadLibrary( "arblib" ); }

  @Override
  public String toString()
  {
    return String.format("RandomState[initialValueSeed=%s]", getInitialValue());
  }
  
  public RandomState(int seed)
  {
    this();
    seed(seed);
  }

  /**
   * Calls {@link arb#gmp_randinit_mt(GMPRandomState), then
   * arb#gmp_randseed_ui(GMPRandomState, long) with the seed value, and
   * this#setInitialValue(int)
   * 
   * @param seed
   * @return this
   */
  public RandomState seed(int seed)
  {
    arb.gmp_randinit_mt(getGmpRandomState());
    arb.gmp_randseed_ui(getGmpRandomState(), seed);
    setInitialValue(seed);
    return this;
  }
  
  public void clear()
  {
    arb.gmp_randclear(getGmpRandomState());    
  }
  
  @Override
  public void close()
  {
    clear();
  }
  

  public void setGmpRandomState(GMPRandomState value) {
    arbJNI.RandomState_gmpRandomState_set(swigCPtr, this, GMPRandomState.getCPtr(value), value);
  }

  public GMPRandomState getGmpRandomState() {
    long cPtr = arbJNI.RandomState_gmpRandomState_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GMPRandomState(cPtr, false);
  }

  public void setInitialValue(int value) {
    arbJNI.RandomState_initialValue_set(swigCPtr, this, value);
  }

  public int getInitialValue() {
    return arbJNI.RandomState_initialValue_get(swigCPtr, this);
  }

  public void setRandomValue(long value) {
    arbJNI.RandomState_randomValue_set(swigCPtr, this, value);
  }

  public long getRandomValue() {
    return arbJNI.RandomState_randomValue_get(swigCPtr, this);
  }

  public void setRandomValue2(long value) {
    arbJNI.RandomState_randomValue2_set(swigCPtr, this, value);
  }

  public long getRandomValue2() {
    return arbJNI.RandomState_randomValue2_get(swigCPtr, this);
  }

  public RandomState() {
    this(arbJNI.new_RandomState(), true);
  }

  @Override
  public RandomState getRandomState()
  {
    return this;
  }

  @Override
  public Real nextElement(int prec, Real result)
  {
    assert false : "TODO: implement";
    return null;
  }

}
