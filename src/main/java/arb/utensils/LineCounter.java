package arb.utensils;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;

/**
 * @see arb.documentation.BusinessSourceLicenseVersionOnePointOne for Â© terms 
 */
public class LineCounter
{
  public static void main(String[] args) throws IOException
  {
    String sourceDir = args.length
                  > 0 ? args[0] : String.format("%s/git/arb4j", System.getProperty("user.home"));
    long   count     = countLines(sourceDir);
    System.out.format("Total Java lines (excluding SWIG files) in %s: %s", sourceDir, count);
  }

  protected static long countLines(String sourceDir) throws IOException
  {
    try ( var sourceFiles = Files.walk(Paths.get(sourceDir)))
    {
      return sourceFiles.filter(LineCounter::shouldBeCounted)
                        .mapToLong(LineCounter::countLines)
                        .sum();
    }
  }

  protected static long countLines(Path p)
  {
    try
    {
      return Files.lines(p).count();
    }
    catch (IOException e)
    {
      Utensils.throwOrWrap(e);
      return -1;
    }
  }

  protected static boolean shouldBeCounted(Path p)
  {
    try
    {
      return p.toString().endsWith(".java")
                    && Files.lines(p)
                            .noneMatch(line -> line.contains("This file was automatically generated by SWIG"));
    }
    catch (IOException e)
    {
      Utensils.throwOrWrap(e);
      return false;
    }
  }
}
