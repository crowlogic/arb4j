/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package arb;

import arb.documentation.BusinessSourceLicenseVersionOnePointOne;
import arb.documentation.TheArb4jLibrary;
import arb.algebra.Ring;

/**
 * @see BusinessSourceLicenseVersionOnePointOne Â© terms of the
 *      {@link TheArb4jLibrary}
 */

public class RationalFunction implements Named,AutoCloseable,Ring<RationalFunction> {
  protected long swigCPtr;
  protected boolean swigCMemOwn;

  public RationalFunction(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(RationalFunction obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        arblibJNI.delete_RationalFunction(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  static { System.loadLibrary( "arblib" ); }

  public RationalFunction setCoeff(int n, long val)
  {
    arblib.fmpq_poly_set_coeff_ui(this, n, val);
    return this;
  }

  public RationalFunction setCoeff(int n, int val)
  {
    arblib.fmpq_poly_set_coeff_si(this, n, val);
    return this;
  }

  public RationalFunction setCoeff(int n, Integer val)
  {
    arblib.fmpq_poly_set_coeff_fmpz(this, n, val.swigCPtr);
    return this;
  }
  
  public RationalFunction setCoeff(int n, Rational val)
  {
    arblib.fmpq_poly_set_coeff_fmpq(this, n, val);
    return this;
  }
  
  public String name;
  
  @SuppressWarnings("unchecked")
  @Override
  public RationalFunction setName(String name)
  {
    this.name = name;
    return this;
  }

  @Override
  public String getName()
  {
    return name;
  }
  
  @Override
  public RationalFunction mul(RationalFunction operand, int prec, RationalFunction result)
  {
    arblib.fmpq_poly_mul(result, this, operand);
    return result;
  }
  
  @Override
  public RationalFunction div(RationalFunction operand, int prec, RationalFunction result)
  {
    arblib.fmpq_poly_div(result, this, operand);
    return result;
  }

  @Override
  public RationalFunction add(RationalFunction addend, int bits, RationalFunction result)
  {
    arblib.fmpq_poly_add(result, this, addend);
    return result;
  }

  @Override
  public RationalFunction sub(RationalFunction subtrahend, int bits, RationalFunction result)
  {
    arblib.fmpq_poly_sub(result, this, subtrahend);
    return result;
  }
  
  public RationalFunction( String str)
  {
    this();
    set(str);
  }
  
  public RationalFunction set(String str )
  {
    arblib.fmpq_poly_set_str(this, str);
    return this;
  }
  
  /**
   * 
   * @return {@link arblib#fmpq_poly_get_str_pretty(RationalFunction, String)}e
   */
  public String toPrettyString()
  {
    return arblib.fmpq_poly_get_str_pretty(this, new String());
  }

  /**
   * 
   * @return {@link arblib#fmpq_poly_get_str(RationalFunction)}
   */
  @Override
  public String toString()
  {
    return arblib.fmpq_poly_get_str(this);
  }
  
  @Override
  public void close() 
  {
    delete();
  }


  public void setCoeffsNative(SWIGTYPE_p_fmpz value) {
    arblibJNI.RationalFunction_coeffsNative_set(swigCPtr, this, SWIGTYPE_p_fmpz.getCPtr(value));
  }

  public SWIGTYPE_p_fmpz getCoeffsNative() {
    long cPtr = arblibJNI.RationalFunction_coeffsNative_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_fmpz(cPtr, false);
  }

  public void setLength(int value) {
    arblibJNI.RationalFunction_length_set(swigCPtr, this, value);
  }

  public int getLength() {
    return arblibJNI.RationalFunction_length_get(swigCPtr, this);
  }

  public void setLongDenominator(SWIGTYPE_p_fmpz value) {
    arblibJNI.RationalFunction_longDenominator_set(swigCPtr, this, SWIGTYPE_p_fmpz.getCPtr(value));
  }

  public SWIGTYPE_p_fmpz getLongDenominator() {
    long cPtr = arblibJNI.RationalFunction_longDenominator_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_fmpz(cPtr, false);
  }

  public RationalFunction() {
    this(arblibJNI.new_RationalFunction(), true);
  }

}
