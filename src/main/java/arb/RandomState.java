/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.2.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package arb;

import arb.stochastic.processes.RandomVectorGenerator;

public class RandomState implements RandomVectorGenerator {
  protected long swigCPtr;
  protected boolean swigCMemOwn;

  public RandomState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(RandomState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
   
  }

  static { System.loadLibrary( "arblib" ); }


  @Override
  public RandomState getRandomState()
  {
    return this;
  }

  @Override
  public Real nextElement(int prec, Real result)
  {
    assert false : "redo, if you really *must* use this technique";
    return null;
   // return result.random(this, prec);
  }

  @Override
  public String toString()
  {
    return String.format("RandomState[initialValueSeed=%s]", getInitialValue());
  }
  
  public RandomState(int seed)
  {
    this();
    seed(seed);
  }

  /**
   * Calls {@link arb#gmp_randinit_mt(GMPRandomState), then
   * arb#gmp_randseed_ui(GMPRandomState, long) with the seed value, and
   * this#setInitialValue(int)
   * 
   * @param seed
   * @return this
   */
  public RandomState seed(int seed)
  {
	arblib.gmp_randinit_mt(getGmpRandomState());
    arblib.gmp_randseed_ui(getGmpRandomState(), seed);
    setInitialValue(seed);
    return this;
  }
  
  public void clear()
  {
    arblib.gmp_randclear(getGmpRandomState());    
  }
  
  @Override
  public void close()
  {
    clear();
  }
  


  public GMPRandomState getGmpRandomState() {
    assert false : "no longer generated by swig";
   return null;
  }

  public void setInitialValue(int value) {
    assert false : "no longer generated by swig";
  }

  public int getInitialValue() {
    assert false : "no longer generated by swig";
    return 0;
  }

  public void setRandomValue(long value) {
    assert false : "no longer generated by swig";
  }

  public long getRandomValue() {
    assert false : "no longer generated by swig";
    return swigCPtr;
  }

  public void setRandomValue2(long value) {
    assert false : "no longer generated by swig";
  }

  public long getRandomValue2() {
    assert false : "no longer generated by swig";
    return swigCPtr;
  }

  public RandomState() {
    assert false : "no longer generated by swig";
  }

}
