NEW: implement KL expansion
TODO: builtin sykbols for the classical orthogonal polynomials
"limit" is null at arb4j/arb.expressions.nodes.IntegralNode.evaluateIndefiniteIntegralAt(IntegralNode.java:217)
todo: mouse wheel zooms control or whole scene
expr compiler:  fractional derivatices
implement ∂/∂x[∏ᵢ₌₁ᵏfᵢ(x)] = ∑ᵢ₌₁ᵏ[(∂/∂x fᵢ(x))∏ⱼ₌₁,ⱼ≠ᵢᵏfⱼ(x)]
java.lang.NoSuchMethodError: 'arb.Integer arb.Fraction.floor(int, arb.Integer)'at n-Σk-ℭ(n,2*k)WherekEq0To⌊n⁄2⌋.evaluate(Unknown Source)at arb4j/arb.functions.Function.evaluate(Function.java:242)
RationalFunction RationalJacobiPolynomials.evaluate(Integer t, int order, int bits, RationalFunction res)<press tab again to see documentation>jshell> P.evaluate(0,128);$2 ==> 1jshell> P.evaluate(1,128);$3 ==> (3*x)/2jshell> P.evaluate(2,128);$4 ==> (20*x^2-5)/8jshell> P.evaluate(3,128);|  Exception arb.exceptions.ArbException: numeratorAddress=123494138668048denominatorAddress=123494138667984numerator=123494139639664denominator=123494139639696|        at RationalFunction.assertPointerConsistency (RationalFunction.java:532)|        at RationalFunction.set (RationalFunction.java:598)|        at RationalFunction.div (RationalFunction.java:56)|        at P.evaluate (Unknown Source)|        at P.evaluate (Unknown Source)|        at RationalJacobiPolynomials.evaluate (RationalJacobiPolynomials.java:115)|        at RationalJacobiPolynomials.evaluate (RationalJacobiPolynomials.java:1)|        at Function.evaluate (Function.java:242)|        at Function.evaluate (Function.java:222)|        at Sequence.evaluate (Sequence.java:50)|        at (#5:1)
