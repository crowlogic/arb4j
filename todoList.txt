NEW: implement KL expansion
"limit" is null at arb4j/arb.expressions.nodes.IntegralNode.evaluateIndefiniteIntegralAt(IntegralNode.java:217)
todo: mouse wheel zooms control or whole scene
expr compiler:  fractional derivatices
java.lang.AssertionError: TODO: map functionalDependsOnIndependentVariable=true'k' context=Context(#1858015030)[functions=[],variables=Variables(#25764044)[[]]] depends=true functional=2*(j(k,x))at arb4j/arb.expressions.Expression.generateFunctional(Expression.java:1027)at arb4j/arb.expressions.Expression.generateEvaluationMethod(Expression.java:972)at arb4j/arb.expressions.Expression.generate(Expression.java:817)at arb4j/arb.expressions.Expression.defineClass(Expression.java:583)at arb4j/arb.expressions.Expression.getInstance(Expression.java:1332)at arb4j/arb.expressions.Expression.instantiate(Expression.java:1481)at arb4j/arb.functions.Function.instantiate(Function.java:129)at arb4j/arb.functions.Function.express(Function.java:92)at arb4j/arb.functions.integer.RealFunctionSequence.express(RealFunctionSequence.java:31)at arb4j/arb.functions.integer.RealFunctionSequence.express(RealFunctionSequence.java:26)at arb4j/arb.expressions.nodes.unary.SphericalBesselFunctionNodeOfTheFirstKindTest.testj0ViaRealFunctionalExpression(SphericalBesselFunctionNodeOfTheFirstKindTest.java:23)at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit@4.13.2/junit.framework.TestCase.runTest(TestCase.java:177)at junit@4.13.2/junit.framework.TestCase.runBare(TestCase.java:142)at junit@4.13.2/junit.framework.TestResult$1.protect(TestResult.java:122)at junit@4.13.2/junit.framework.TestResult.runProtected(TestResult.java:142)at junit@4.13.2/junit.framework.TestResult.run(TestResult.java:125)at junit@4.13.2/junit.framework.TestCase.run(TestCase.java:130)at junit@4.13.2/junit.framework.TestSuite.runTest(TestSuite.java:241)at junit@4.13.2/junit.framework.TestSuite.run(TestSuite.java:236)at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:530)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:758)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:453)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)
Exception in thread "main" java.lang.AssertionError: value is nullat arb4j/arb.Integer.set(Integer.java:904)at arb4j/arb.functions.real.kfunc.initialize(kfunc.java:47)at arb4j/arb.functions.real.k.evaluate(k.java:40)at arb4j/arb.functions.real.k.evaluate(k.java:1)at arb4j/arb.functions.Function.evaluate(Function.java:243)at arb4j/arb.functions.Function.evaluate(Function.java:223)at arb4j/arb.functions.integer.Sequence.evaluate(Sequence.java:50)at arb4j/arb.functions.real.k.main(k.java:22)
java.lang.NoSuchMethodError: 'arb.Complex arb.functions.SphericalBesselFunction.evaluate(arb.Complex, int, int, arb.Complex)'at j(3,2_3)*2.evaluate(Unknown Source)at arb4j/arb.functions.Function.evaluate(Function.java:237)at arb4j/arb.expressions.viz.ExpressionTree.evaluateExpression(ExpressionTree.java:697)at arb4j/arb.expressions.viz.Expressor.executeTabAction(Expressor.java:314)at arb4j/arb.expressions.viz.Expressor.evaluate(Expressor.java:399)
<<<<<<< HEAD
TODO: builtin symbols for the classical orthogonal polynomials
=======
implement ∂/∂x[∏ᵢ₌₁ᵏfᵢ(x)] = ∑ᵢ₌₁ᵏ[(∂/∂x fᵢ(x))∏ⱼ₌₁,ⱼ≠ᵢᵏfⱼ(x)]
>>>>>>> branch 'master' of git@github.com:crowlogic/arb4j.git
