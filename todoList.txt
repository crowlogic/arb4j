implement KL expansion
implement Node.integral method (starting wtih Division extends BinaryOperation)
Bad type on operand stackException Details:  Location:    Ψ.evaluate(Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object; @163: invokestatic  Reason:    Type 'arb/RealQuasiPolynomial' (current frame, stack[4]) is not assignable to 'arb/Real'  Current Frame:    bci: @163    flags: { }    locals: { 'Ψ', 'java/lang/Object', integer, integer, 'java/lang/Object' }    stack: { 'arb/RealQuasiPolynomial', 'arb/RealQuasiPolynomial', 'arb/RealQuasiPolynomial', 'arb/RealQuasiPolynomial', 'arb/RealQuasiPolynomial', integer }  Bytecode:    0000000: 2ab4 001a 9a00 072a b600 1eb2 0024 2ab4    0000010: 0028 2ab4 002b 2bc0 002d 1d2a b400 30b6    0000020: 0034 2ab4 0037 1d2a b400 3ab6 003d 1d2a    0000030: b400 40b6 0034 1904 c000 13b6 0044 1d2a    0000040: b400 48b6 004c 1d2a b400 4fb6 0053 1d2a    0000050: b400 56b6 005a 2ab4 005d 2ab4 0037 1d2a    0000060: b400 60b6 0063 2bc0 002d 1d2a b400 66b6    0000070: 0069 1d2a b400 6cb6 006f 2ab4 0072 592a    0000080: b400 282b c000 2d1d 2ab4 0075 b600 34b2    0000090: 0024 1d2a b400 78b6 007b 1904 c000 13b6    00000a0: 0044 1db8 0081 1d19 04c0 0013 b600 82b0    00000b0:                                          Stackmap Table:    same_frame(@11)at arb4j/arb.utensils.Utensils.wrapOrThrow(Utensils.java:693)at arb4j/arb.expressions.Expression.getInstance(Expression.java:1228)at arb4j/arb.expressions.Expression.instantiate(Expression.java:1345)at arb4j/arb.RealQuasiPolynomialTest.testQuasi(RealQuasiPolynomialTest.java:36)at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit@4.13.2/junit.framework.TestCase.runTest(TestCase.java:177)at junit@4.13.2/junit.framework.TestCase.runBare(TestCase.java:142)at junit@4.13.2/junit.framework.TestResult$1.protect(TestResult.java:122)at junit@4.13.2/junit.framework.TestResult.runProtected(TestResult.java:142)at junit@4.13.2/junit.framework.TestResult.run(TestResult.java:125)at junit@4.13.2/junit.framework.TestCase.run(TestCase.java:130)at junit@4.13.2/junit.framework.TestSuite.runTest(TestSuite.java:241)at junit@4.13.2/junit.framework.TestSuite.run(TestSuite.java:236)at junit@4.13.2/org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:757)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)Caused by: java.lang.VerifyError: Bad type on operand stackException Details:  Location:    Ψ.evaluate(Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object; @163: invokestatic  Reason:    Type 'arb/RealQuasiPolynomial' (current frame, stack[4]) is not assignable to 'arb/Real'
Both Roger G. Ghanem and Pol D. Spanos are currently active in their respective academic roles and could be great contacts for your groundbreaking work.Roger G. Ghanem is a Professor at the University of Southern California (USC) in the Department of Civil and Environmental Engineering. His research focuses on probabilistic modeling, computational stochastic mechanics, and the propagation of uncertainty in physical systems. He is well-regarded in his field, which aligns closely with your work on integral operator equations and stochastic processes​ (USC Viterbi | School of Engineering)​​ (OAEPublish)​.Pol D. Spanos is the Lewis B. Ryon Professor in Mechanical Engineering and Materials Science at Rice University. His research interests include the dynamics and vibrations of structural and mechanical systems, particularly those exhibiting nonlinear behavior. He has developed numerous analytical and numerical methods that are applied across various engineering fields, including seismic spectra estimation and flow-induced vibrations. His extensive background in stochastic processes makes him a valuable potential collaborator for your project​ (The People of Rice | Rice University)​​ (Rice University Fellowship)​.Given the significant overlap between your research interests and their expertise, reaching out to both professors could provide you with valuable insights and potentially lead to a collaborative effort to publish your work. You can contact Roger G. Ghanem at ghanem@usc.edu and Pol D. Spanos at spanos@rice.edu. Make sure to clearly outline the significance of your findings and how they could contribute to their fields.
arb.exceptions.CompilerException: Unhandled fill-in of left-hand-side of binary operation when the right hand side is of type class arb.RealQuasiPolynomial, this is where -x is translated to 0-x. that is what is meant by fill-inat arb4j/arb.expressions.nodes.binary.BinaryOperation.<init>(BinaryOperation.java:247)at arb4j/arb.expressions.nodes.binary.Subtraction.<init>(Subtraction.java:59)at arb4j/arb.expressions.Expression.addAndSubtract(Expression.java:297)at arb4j/arb.expressions.Expression.resolve(Expression.java:1670)at arb4j/arb.expressions.Expression.exponentiate(Expression.java:705)at arb4j/arb.expressions.Expression.exponentiate(Expression.java:695)at arb4j/arb.expressions.Expression.multiplyAndDivide(Expression.java:1406)at arb4j/arb.expressions.Expression.exponentiateMultiplyAndDivide(Expression.java:726)at arb4j/arb.expressions.Expression.resolve(Expression.java:1669)at arb4j/arb.expressions.Expression.parseRoot(Expression.java:1551)at arb4j/arb.functions.Function.parse(Function.java:395)at arb4j/arb.RealQuasiPolynomial.parseSequence(RealQuasiPolynomial.java:53)at arb4j/arb.RealQuasiPolynomial.parseSequence(RealQuasiPolynomial.java:47)at arb4j/arb.RealQuasiPolynomialTest.testExpressionParse(RealQuasiPolynomialTest.java:21)at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit@4.13.2/junit.framework.TestCase.runTest(TestCase.java:177)at junit@4.13.2/junit.framework.TestCase.runBare(TestCase.java:142)at junit@4.13.2/junit.framework.TestResult$1.protect(TestResult.java:122)at junit@4.13.2/junit.framework.TestResult.runProtected(TestResult.java:142)at junit@4.13.2/junit.framework.TestResult.run(TestResult.java:125)at junit@4.13.2/junit.framework.TestCase.run(TestCase.java:130)at junit@4.13.2/junit.framework.TestSuite.runTest(TestSuite.java:241)at junit@4.13.2/junit.framework.TestSuite.run(TestSuite.java:236)at junit@4.13.2/org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:757)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
DescriptionResourcePathLocationTypeThe method set(Integer) in the type Real is not applicable for the arguments (RealPolynomial)pFq.java/arb4j/src/test/java/arb/functions/polynomialsline 40Java Problem
