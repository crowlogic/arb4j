NEW: implement KL expansion
expr compiler: derivatives and fractional derivatices
TODO: builtin sykbols for the classical orthogonal polynomials
java.lang.NoSuchMethodError: 'arb.RationalFunction arb.RationalFunction.log(int, arb.RationalFunction)'at tanh(log(1+t^2)).evaluate(Unknown Source)at arb4j/arb.functions.Function.evaluate(Function.java:234)
NoSuchMethodError: 'arb.Complex arb.Fraction.mul(arb.Complex, int, arb.Complex)'at factorℚℂ1.evaluate(Unknown Source)
t-J(k,t).evaluate(Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object; @26: invokestatic  Reason:    Type 'arb/Integer' (current frame, stack[2]) is not assignable to 'arb/Real'  Current Frame:    bci: @26    flags: { }    locals: { 't-J(k,t)', 'java/lang/Object', integer, integer, 'java/lang/Object' }    stack: { 'arb/Real', 'arb/Real', 'arb/Integer', 'arb/Real', integer }  Bytecode:    0000000: 2ab4 001a 9a00 072a b600 1e19 04c0 0013    0000010: 592a b400 222b c000 131d b800 28b0       Stackmap Table:    same_frame(@11)at arb4j/arb.utensils.Utensils.wrapOrThrow(Utensils.java:260)at arb4j/arb.expressions.Expression.getInstance(Expression.java:1242)at arb4j/arb.expressions.Expression.instantiate(Expression.java:1369)at arb4j/arb.functions.Function.instantiate(Function.java:126)at arb4j/arb.functions.real.RealFunction.express(RealFunction.java:64)at arb4j/arb.expressions.RealFunctionExpressionCompilerTest.testBesselFunctionVariableIndex(RealFunctionExpressionCompilerTest.java:134)at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit@4.13.2/junit.framework.TestCase.runTest(TestCase.java:177)at junit@4.13.2/junit.framework.TestCase.runBare(TestCase.java:142)at junit@4.13.2/junit.framework.TestResult$1.protect(TestResult.java:122)at junit@4.13.2/junit.framework.TestResult.runProtected(TestResult.java:142)at junit@4.13.2/junit.framework.TestResult.run(TestResult.java:125)at junit@4.13.2/junit.framework.TestCase.run(TestCase.java:130)at junit@4.13.2/junit.framework.TestSuite.runTest(TestSuite.java:241)at junit@4.13.2/junit.framework.TestSuite.run(TestSuite.java:236)at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:530)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:758)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:453)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:211)Caused by: java.lang.VerifyError: Bad type on operand stackException Details:  Location:    t-J(k,t).evaluate(Ljava/lang/Object;IILjava/lang/Object;)Ljava/lang/Object; @26: invokestatic  Reason:    Type 'arb/Integer' (current frame, stack[2]) is not assignable to 'arb/Real'  Current Frame:    bci: @26    flags: { }    locals: { 't-J(k,t)', 'java/lang/Object', integer, integer, 'java/lang/Object' }    stack: { 'arb/Real', 'arb/Real', 'arb/Integer', 'arb/Real', integer }  Bytecode:    0000000: 2ab4 001a 9a00 072a b600 1e19 04c0 0013    0000010: 592a b400 222b c000 131d b800 28b0       Stackmap Table:    same_frame(@11)at java.base/java.lang.Class.getDeclaredConstructors0(Native Method)at java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3621)at java.base/java.lang.Class.getConstructor0(Class.java:3826)at java.base/java.lang.Class.getDeclaredConstructor(Class.java:3004)at arb4j/arb.expressions.Expression.getInstance(Expression.java:1238)... 20 more
java.lang.NullPointerException: Cannot invoke "arb.expressions.nodes.Node.generate(org.objectweb.asm.MethodVisitor, java.lang.Class)" because "limit" is nullat arb4j/arb.expressions.nodes.IntegralNode.evaluateIndefiniteIntegralAt(IntegralNode.java:208)
