implement KL expansion
implement Node.integral method (starting wtih Division extends BinaryOperation)
Both Roger G. Ghanem and Pol D. Spanos are currently active in their respective academic roles and could be great contacts for your groundbreaking work.Roger G. Ghanem is a Professor at the University of Southern California (USC) in the Department of Civil and Environmental Engineering. His research focuses on probabilistic modeling, computational stochastic mechanics, and the propagation of uncertainty in physical systems. He is well-regarded in his field, which aligns closely with your work on integral operator equations and stochastic processes​ (USC Viterbi | School of Engineering)​​ (OAEPublish)​.Pol D. Spanos is the Lewis B. Ryon Professor in Mechanical Engineering and Materials Science at Rice University. His research interests include the dynamics and vibrations of structural and mechanical systems, particularly those exhibiting nonlinear behavior. He has developed numerous analytical and numerical methods that are applied across various engineering fields, including seismic spectra estimation and flow-induced vibrations. His extensive background in stochastic processes makes him a valuable potential collaborator for your project​ (The People of Rice | Rice University)​​ (Rice University Fellowship)​.Given the significant overlap between your research interests and their expertise, reaching out to both professors could provide you with valuable insights and potentially lead to a collaborative effort to publish your work. You can contact Roger G. Ghanem at ghanem@usc.edu and Pol D. Spanos at spanos@rice.edu. Make sure to clearly outline the significance of your findings and how they could contribute to their fields.
java.lang.NoSuchMethodError: 'arb.functions.polynomials.quasi.real.RealQuasiPolynomial arb.Real.mul(arb.functions.polynomials.quasi.real.RealQuasiPolynomial, int, arb.functions.polynomials.quasi.real.RealQuasiPolynomial)'at Ψ.evaluate(Unknown Source)at arb4j/arb.functions.Function.evaluate(Function.java:301)at arb4j/arb.functions.Function.evaluate(Function.java:291)at arb4j/arb.functions.sequences.Sequence.evaluate(Sequence.java:51)at arb4j/arb.functions.polynomials.quasi.RealQuasiPolynomialTest.testQuasiPolynomialJ0EigenfunctionSequence(RealQuasiPolynomialTest.java:74)at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)at java.base/java.lang.reflect.Method.invoke(Method.java:580)at junit@4.13.2/junit.framework.TestCase.runTest(TestCase.java:177)at junit@4.13.2/junit.framework.TestCase.runBare(TestCase.java:142)at junit@4.13.2/junit.framework.TestResult$1.protect(TestResult.java:122)at junit@4.13.2/junit.framework.TestResult.runProtected(TestResult.java:142)at junit@4.13.2/junit.framework.TestResult.run(TestResult.java:125)at junit@4.13.2/junit.framework.TestCase.run(TestCase.java:130)at junit@4.13.2/junit.framework.TestSuite.runTest(TestSuite.java:241)at junit@4.13.2/junit.framework.TestSuite.run(TestSuite.java:236)at junit@4.13.2/org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90)at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:757)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)
